{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectIssueSelectorView = props => {\n  _s();\n\n  console.log(props.nextStateName);\n  React.useEffect(() => {\n    if (props.props.SelectedOptionIssue != undefined) {\n      const xx = props.nextStateName;\n      props.props.changePomodoroViewState(props.nextStateName);\n    }\n  }, [props.props.SelectedOptionIssue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Select Project/issue to start the pomodoro session!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ProjectIssueSelectorView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProjectIssueSelectorView;\nexport default ProjectIssueSelectorView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectIssueSelectorView\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js"],"names":["React","ProjectIssueSelectorView","props","console","log","nextStateName","useEffect","SelectedOptionIssue","undefined","xx","changePomodoroViewState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACE,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAlB;AACAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,QAAIJ,KAAK,CAACA,KAAN,CAAYK,mBAAZ,IAAmCC,SAAvC,EAAkD;AAChD,YAAMC,EAAE,GAAGP,KAAK,CAACG,aAAjB;AACAH,MAAAA,KAAK,CAACA,KAAN,CAAYQ,uBAAZ,CAAoCR,KAAK,CAACG,aAA1C;AACD;AACC,GALJ,EAKM,CAACH,KAAK,CAACA,KAAN,CAAYK,mBAAb,CALN;AAMI,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAIL,CAZD;;GAAMN,wB;;KAAAA,wB;AAeR,eAAeA,wBAAf","sourcesContent":["import React from 'react';\n  const ProjectIssueSelectorView = (props) => {\n    console.log(props.nextStateName)\n    React.useEffect(() => {\n      if (props.props.SelectedOptionIssue != undefined) {\n        const xx = props.nextStateName\n        props.props.changePomodoroViewState(props.nextStateName)\n      }\n       }, [props.props.SelectedOptionIssue]);\n        return (<div>\n          Select Project/issue to start the pomodoro session!\n        </div>)\n       \n  }\n\n\nexport default ProjectIssueSelectorView;\n"]},"metadata":{},"sourceType":"module"}