{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js\";\nimport React, { useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\";\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PomodoroBreakInProgress = props => {\n  const stopCurrentSession = nextStateName => {\n    props.changePomodoroViewState(props.nextStateName);\n  };\n\n  const pomodoroTimerKiller = nextStateName => {\n    props.changePomodoroViewState(props.nextStateName);\n    CacheCleaner([\"minutes\", \"seconds\", \"hours\"]);\n  };\n\n  if (props.numberofsessions % props.settings.frequencyLongBreakDefaultplusCached != 0) {\n    const propslist = {};\n\n    if (localStorage.getItem('minutes')) {\n      console.log(\"minutes\");\n      const propslist = {\n        seconds: 0,\n        hours: 0,\n        minutes: localStorage.getItem('minutes')\n      };\n    } else {\n      console.log(\"not monutes\");\n      var minutesvar = cloneDeep(props.settings.breakDurationDefaulttplusCached);\n      const propslist = {\n        seconds: 0,\n        hours: 0,\n        minutes: minutesvar\n      };\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PomodoRoTimer, {\n        props: propslist,\n        pomodoroTimerKiller: pomodoroTimerKiller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCurrentSession,\n        children: \"Stop current short break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this);\n  } else {\n    var minutesvar = cloneDeep(props.settings.longBreakDurationDefaultplusCached);\n    const propslist = {\n      seconds: 0,\n      hours: 0,\n      minutes: minutesvar\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PomodoRoTimer, {\n        props: propslist,\n        pomodoroTimerKiller: pomodoroTimerKiller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCurrentSession,\n        children: \"Stop current Long break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this);\n  }\n};\n\n_c = PomodoroBreakInProgress;\nexport default PomodoroBreakInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"PomodoroBreakInProgress\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js"],"names":["React","useEffect","PomodoRoTimer","CacheCleaner","cloneDeep","PomodoroBreakInProgress","props","stopCurrentSession","nextStateName","changePomodoroViewState","pomodoroTimerKiller","numberofsessions","settings","frequencyLongBreakDefaultplusCached","propslist","localStorage","getItem","console","log","seconds","hours","minutes","minutesvar","breakDurationDefaulttplusCached","longBreakDurationDefaultplusCached"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AACE,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AACzC,QAAMC,kBAAkB,GAAIC,aAAD,IAAmB;AAC5CF,IAAAA,KAAK,CAACG,uBAAN,CAA8BH,KAAK,CAACE,aAApC;AACD,GAFD;;AAGA,QAAME,mBAAmB,GAAIF,aAAD,IAAoB;AAC9CF,IAAAA,KAAK,CAACG,uBAAN,CAA8BH,KAAK,CAACE,aAApC;AACAL,IAAAA,YAAY,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,CAAD,CAAZ;AACD,GAHD;;AAKC,MAAIG,KAAK,CAACK,gBAAN,GAAyBL,KAAK,CAACM,QAAN,CAAeC,mCAAxC,IAA+E,CAAnF,EAAqF;AACnF,UAAMC,SAAS,GAAG,EAAlB;;AACA,QAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAsC;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,YAAMJ,SAAS,GAAG;AAACK,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,KAAK,EAAE,CAApB;AAAuBC,QAAAA,OAAO,EAAEN,YAAY,CAACC,OAAb,CAAqB,SAArB;AAAhC,OAAlB;AAGA,KALD,MAMK;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,UAAII,UAAU,GAAGlB,SAAS,CAACE,KAAK,CAACM,QAAN,CAAeW,+BAAhB,CAA1B;AACA,YAAMT,SAAS,GAAG;AAACK,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,KAAK,EAAE,CAApB;AAAuBC,QAAAA,OAAO,EAAEC;AAAhC,OAAlB;AAEC;;AAGH,wBAAQ;AAAA,8BACN,QAAC,aAAD;AAAe,QAAA,KAAK,EAAER,SAAtB;AAAkC,QAAA,mBAAmB,EAAEJ;AAAvD;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAQ,QAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD,GArBA,MAsBI;AACH,QAAIe,UAAU,GAAGlB,SAAS,CAACE,KAAK,CAACM,QAAN,CAAeY,kCAAhB,CAA1B;AACA,UAAMV,SAAS,GAAG;AAACK,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE,CAApB;AAAuBC,MAAAA,OAAO,EAAEC;AAAhC,KAAlB;AACA,wBAAQ;AAAA,8BACN,QAAC,aAAD;AAAe,QAAA,KAAK,EAAER,SAAtB;AAAkC,QAAA,mBAAmB,EAAEJ;AAAvD;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAQ,QAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD;AAEF,CAzCD;;KAAMF,uB;AA4CR,eAAeA,uBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport cloneDeep from 'lodash/cloneDeep';\n  const PomodoroBreakInProgress = (props) => {\n    const stopCurrentSession = (nextStateName) => {\n      props.changePomodoroViewState(props.nextStateName)\n    }\n    const pomodoroTimerKiller = (nextStateName)  => {\n      props.changePomodoroViewState(props.nextStateName);\n      CacheCleaner([\"minutes\", \"seconds\", \"hours\"])\n    }\n   \n     if (props.numberofsessions % props.settings.frequencyLongBreakDefaultplusCached != 0){\n       const propslist = {}\n       if (localStorage.getItem('minutes') ) {\n         console.log(\"minutes\")\n        const propslist = {seconds: 0, hours: 0, minutes: localStorage.getItem('minutes') \n      }\n      \n       }\n       else {\n         console.log(\"not monutes\")\n        var minutesvar = cloneDeep(props.settings.breakDurationDefaulttplusCached)\n        const propslist = {seconds: 0, hours: 0, minutes: minutesvar}\n        \n        }\n       \n  \n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current short break</button></div>)\n\n    } \n    else {\n      var minutesvar = cloneDeep(props.settings.longBreakDurationDefaultplusCached)\n      const propslist = {seconds: 0, hours: 0, minutes: minutesvar}\n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current Long break</button></div>)\n\n    }\n  \n  }\n\n\nexport default PomodoroBreakInProgress;\n"]},"metadata":{},"sourceType":"module"}