{"ast":null,"code":"var _jsxFileName = \"/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './project.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = props => {\n  _s();\n\n  const [projectKeys, setProjectKeys] = useState([]);\n\n  function fetchProjectKeysHandler() {\n    fetch('http://localhost:5000/getAvaialbleProjectKeys').then(response => response.json()).then(data => setProjectKeys(data));\n  }\n\n  ;\n  useEffect(() => {\n    fetchProjectKeysHandler();\n  }, []);\n\n  function Options({\n    options\n  }) {\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this));\n  }\n\n  function handleChange(event) {\n    // setSelectedOption(event.target.value)\n    props.setSelectedProject(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [\"Project\", /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      name: \"selectList\",\n      id: \"selectList\",\n      value: props.selectedProject,\n      children: [\"\\xA0    \", /*#__PURE__*/_jsxDEV(Options, {\n        options: projectKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Project, \"OIXFdGe8LPFbC6P2uV0AgrHVXfs=\");\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js"],"names":["React","useState","useEffect","Project","props","projectKeys","setProjectKeys","fetchProjectKeysHandler","fetch","then","response","json","data","Options","options","map","option","handleChange","event","setSelectedProject","target","value","selectedProject"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;AACA,WAASM,uBAAT,GAAmC;AACjCC,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEIG,IAAI,IACVN,cAAc,CAACM,IAAD,CAHZ;AAMG;;AAAA;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,uBAAuB;AACtB,GAFM,EAEJ,EAFI,CAAT;;AAMF,WAASM,OAAT,CAAiB;AAAEC,IAAAA;AAAF,GAAjB,EAA8B;AAC1B,WACIA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBACN;AAAA,gBACCA;AADD;AAAA;AAAA;AAAA;AAAA,YADZ,CADJ;AAMH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC3B;AACAd,IAAAA,KAAK,CAACe,kBAAN,CAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAtC;AACF;;AACD,sBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,uCAGE;AAAS,MAAA,QAAQ,EAAEJ,YAAnB;AAAiC,MAAA,IAAI,EAAC,YAAtC;AAAmD,MAAA,EAAE,EAAC,YAAtD;AAAmE,MAAA,KAAK,EAAEb,KAAK,CAACkB,eAAhF;AAAA,0CACA,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEjB;AAAlB;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD,CAxCD;;GAAMF,O;;KAAAA,O;AA0CN,eAAeA,OAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport './project.css'\r\nconst Project = (props) => {\r\n  const [projectKeys, setProjectKeys] = useState([]);\r\n  function fetchProjectKeysHandler() {\r\n    fetch('http://localhost:5000/getAvaialbleProjectKeys')\r\n    .then(response => response.json())\r\n  .then(data => \r\n  setProjectKeys(data));\r\n  \r\n\r\n      };\r\n     \r\n      useEffect(() => {\r\n        fetchProjectKeysHandler();\r\n        }, []);\r\n\r\n\r\n\r\n    function Options({ options }) {\r\n        return (\r\n            options.map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n     // setSelectedOption(event.target.value)\r\n     props.setSelectedProject(event.target.value)\r\n  }\r\n  return (\r\n    \r\n    <div className='project'>\r\n      Project\r\n    \r\n      <select  onChange={handleChange} name=\"selectList\" id=\"selectList\" value={props.selectedProject}>\r\n Â     <Options options={projectKeys} />\r\n</select>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}