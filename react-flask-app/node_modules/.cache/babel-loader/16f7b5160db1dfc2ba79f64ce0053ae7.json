{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './selectedissue.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectedIssue = props => {\n  _s();\n\n  const [IssueKeys, setIssueKeys] = useState([]);\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState([]);\n\n  function FetchIssueHandler() {\n    console.log(props.selectedProject);\n\n    if (props.selectedProject != undefined) {\n      var url = '/getIssueKeys/' + props.selectedProject;\n      console.log('url is' + url);\n      fetch(url).then(response => response.json()).then(data => setIssueKeys(data));\n    }\n  }\n\n  ;\n\n  function FetchSummaryForIssueKey() {\n    console.log(IssueKeys);\n    setIssueKeyPlusSummary([]);\n\n    for (const i of IssueKeys) {\n      var url = '/getIssueSummary/' + i;\n      console.log(\"issue summary path is\" + url);\n      console.log(i);\n      fetch(url).then(response => response.json()).then(data => setIssueKeyPlusSummary(oldArray => [...oldArray, [i, data]]));\n    }\n  }\n\n  useEffect(() => {\n    console.log(props.selectedProject);\n\n    if (props.selectedProject != undefined) {\n      FetchIssueHandler();\n      FetchSummaryForIssueKey();\n      console.log('hello' + props.selectedProject);\n    }\n  }, [props.selectedProject]);\n\n  function Options({\n    options\n  }) {\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this));\n  }\n\n  function handleChange(event) {\n    props.setSelectedIssue(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectedissue\",\n    children: [\"Issue:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      name: \"selectIssueList\",\n      id: \"selectIssueList\",\n      value: props.SelectedOptionIssue,\n      children: [\"\\xA0    \", /*#__PURE__*/_jsxDEV(Options, {\n        options: IssueKeyPlusSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectedIssue, \"7hCNVrZZ+yW1ENutXR3z2fpooo4=\");\n\n_c = SelectedIssue;\nexport default SelectedIssue;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedIssue\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js"],"names":["React","useState","useEffect","SelectedIssue","props","IssueKeys","setIssueKeys","IssueKeyPlusSummary","setIssueKeyPlusSummary","FetchIssueHandler","console","log","selectedProject","undefined","url","fetch","then","response","json","data","FetchSummaryForIssueKey","i","oldArray","Options","options","map","option","handleChange","event","setSelectedIssue","target","value","SelectedOptionIssue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D;;AAMA,WAASQ,iBAAT,GAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,eAAlB;;AACA,QAAIR,KAAK,CAACQ,eAAN,IAAyBC,SAA7B,EAAwC;AACxC,UAAIC,GAAG,GAAG,mBAAmBV,KAAK,CAACQ,eAAnC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWG,GAAvB;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEIG,IAAI,IACVb,YAAY,CAACa,IAAD,CAHV;AAOH;AAEM;;AAAA;;AAED,WAASC,uBAAT,GAAmC;AAC/BV,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAG,IAAAA,sBAAsB,CAAC,EAAD,CAAtB;;AACA,SAAK,MAAMa,CAAX,IAAgBhB,SAAhB,EAA2B;AAEzB,UAAIS,GAAG,GAAG,sBAAsBO,CAAhC;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BG,GAAtC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACAN,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IACRX,sBAAsB,CAACc,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAgB,CAACD,CAAD,EAAIF,IAAJ,CAAhB,CAAb,CAHxB;AAKD;AACJ;;AAEFjB,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,eAAlB;;AACA,QAAKR,KAAK,CAACQ,eAAN,IAAyBC,SAA9B,EAAyC;AACvCJ,MAAAA,iBAAiB;AACjBW,MAAAA,uBAAuB;AACvBV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUP,KAAK,CAACQ,eAA5B;AAA8C;AAC7C,GANK,EAMH,CAACR,KAAK,CAACQ,eAAP,CANG,CAAT;;AAUD,WAASW,OAAT,CAAiB;AAAEC,IAAAA;AAAF,GAAjB,EAA8B;AAC1B,WACIA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBACN;AAAA,gBACCA;AADD;AAAA;AAAA;AAAA;AAAA,YADZ,CADJ;AAMH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC1BxB,IAAAA,KAAK,CAACyB,gBAAN,CAAuBD,KAAK,CAACE,MAAN,CAAaC,KAApC;AACH;;AAED,sBAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,sCAEE;AAAS,MAAA,QAAQ,EAAEJ,YAAnB;AAAiC,MAAA,IAAI,EAAC,iBAAtC;AAAwD,MAAA,EAAE,EAAC,iBAA3D;AAA6E,MAAA,KAAK,EAAEvB,KAAK,CAAC4B,mBAA1F;AAAA,0CACA,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEzB;AAAlB;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAOC,CAvEH;;GAAMJ,a;;KAAAA,a;AAyEN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState([]);\r\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState([]);\r\n\r\n\r\n  \r\n\r\n\r\n  function FetchIssueHandler() {\r\n    console.log(props.selectedProject)\r\n    if (props.selectedProject != undefined) {\r\n    var url = '/getIssueKeys/' + props.selectedProject\r\n    console.log('url is' + url)\r\n    fetch(url)\r\n    .then(response => response.json())\r\n  .then(data => \r\n  setIssueKeys(data));\r\n\r\n  \r\n\r\n}\r\n\r\n      };\r\n\r\n      function FetchSummaryForIssueKey() {\r\n          console.log(IssueKeys)\r\n          setIssueKeyPlusSummary([])\r\n          for (const i of IssueKeys) {\r\n\r\n            var url = '/getIssueSummary/' + i\r\n            console.log(\"issue summary path is\" + url)\r\n            console.log(i)\r\n            fetch(url)\r\n            .then(response => response.json())     \r\n            .then(data =>  \r\n              setIssueKeyPlusSummary(oldArray => [...oldArray,  ([i, data])]));\r\n            \r\n          }\r\n      }\r\n     \r\n     useEffect(() => {\r\n      console.log(props.selectedProject)\r\n      if ( props.selectedProject != undefined) {\r\n        FetchIssueHandler()\r\n        FetchSummaryForIssueKey();\r\n        console.log('hello' + props.selectedProject) }\r\n        }, [props.selectedProject]);\r\n\r\n\r\n\r\n    function Options({ options }) {\r\n        return (\r\n            options.map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      props.setSelectedIssue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={props.SelectedOptionIssue}>\r\n Â     <Options options={IssueKeyPlusSummary} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n"]},"metadata":{},"sourceType":"module"}