{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PomodoRoTimer = props => {\n  _s();\n\n  const [[h, m, s], setTime] = useState([props.props.hours, props.props.minutes, props.props.seconds]);\n  console.log([h, m, s]);\n\n  const tick = () => {\n    if (props.props.paused || props.props.sessionCompleted) return;\n\n    if (h == 0 && m == 0 && s == 0) {\n      console.log(\"it is 0.0.0!!\");\n      props.pomodoroTimerKiller();\n      return;\n    } else if (m === 0 && s === 0) {\n      setTime([h - 1, 59, 59]);\n    } else if (s == 0) {\n      setTime([h, m - 1, 59]);\n    } else {\n      setTime([h, m, s - 1]);\n    }\n  };\n\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n    localStorage.setItem('hours', h);\n    localStorage.setItem('minutes', m);\n    localStorage.setItem('seconds', s);\n    return () => clearInterval(timerID);\n  });\n  React.useEffect(() => {}, [props.props.hours, props.props.minutes, props.props.seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.props.sessionCompleted ? \"Time's up!\" : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}; // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\n_s(PomodoRoTimer, \"bcTHgKlyecGyvpMgdvtz6oINBso=\");\n\n_c = PomodoRoTimer;\nexport default PomodoRoTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PomodoRoTimer\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js"],"names":["React","useState","useEffect","PomodoRoTimer","props","h","m","s","setTime","hours","minutes","seconds","console","log","tick","paused","sessionCompleted","pomodoroTimerKiller","timerID","setInterval","localStorage","setItem","clearInterval","toString","padStart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM,CAAC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAD,EAAYC,OAAZ,IAAuBP,QAAQ,CAAC,CAACG,KAAK,CAACA,KAAN,CAAYK,KAAb,EAAoBL,KAAK,CAACA,KAAN,CAAYM,OAAhC,EAAyCN,KAAK,CAACA,KAAN,CAAYO,OAArD,CAAD,CAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACR,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAZ;;AAEA,QAAMO,IAAI,GAAG,MAAM;AAEf,QAAKV,KAAK,CAACA,KAAN,CAAYW,MAAb,IAAwBX,KAAK,CAACA,KAAN,CAAYY,gBAAxC,EAA0D;;AAC1D,QAAIX,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CAAf,IAAoBC,CAAC,IAAI,CAA7B,EAAgC;AAC9BK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAT,MAAAA,KAAK,CAACa,mBAAN;AACF;AAAQ,KAHR,MAIK,IAAIX,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAArB,EAAwB;AAC3BC,MAAAA,OAAO,CAAC,CAACH,CAAC,GAAG,CAAL,EAAQ,EAAR,EAAY,EAAZ,CAAD,CAAP;AAED,KAHI,MAGE,IAAIE,CAAC,IAAI,CAAT,EAAY;AACjBC,MAAAA,OAAO,CAAC,CAACH,CAAD,EAAIC,CAAC,GAAG,CAAR,EAAW,EAAX,CAAD,CAAP;AACD,KAFM,MAEA;AACLE,MAAAA,OAAO,CAAC,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,CAAD,CAAP;AACD;AACF,GAfH;;AAmBEL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,OAAO,GAAGC,WAAW,CAAC,MAAML,IAAI,EAAX,EAAe,IAAf,CAA3B;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BhB,CAA9B;AACAe,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCf,CAAhC;AACAc,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCd,CAAhC;AACA,WAAO,MAAMe,aAAa,CAACJ,OAAD,CAA1B;AAGD,GARQ,CAAT;AAUAlB,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM,CAErB,CAFD,EAEG,CAACE,KAAK,CAACA,KAAN,CAAYK,KAAb,EAAoBL,KAAK,CAACA,KAAN,CAAYM,OAAhC,EAAyCN,KAAK,CAACA,KAAN,CAAYO,OAArD,CAFH;AAKF,sBACE;AAAA,4BACE;AAAA,gBAAK,GAAEN,CAAC,CAACkB,QAAF,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,GAAzB,CAA8B,IAAGlB,CAAC,CACtCiB,QADqC,GAErCC,QAFqC,CAE5B,CAF4B,EAEzB,GAFyB,CAEpB,IAAGjB,CAAC,CAACgB,QAAF,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,GAAzB,CAA8B;AAFrD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAMpB,KAAK,CAACA,KAAN,CAAYY,gBAAZ,GAA+B,YAA/B,GAA8C;AAApD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjDH,C,CAkDG;;;GAlDGb,a;;KAAAA,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.props.hours, props.props.minutes, props.props.seconds]);\n    console.log([h, m, s])\n\n    const tick = () => {\n        \n        if ((props.props.paused) || props.props.sessionCompleted) return;\n        if (h == 0 && m == 0 && s == 0) {\n          console.log(\"it is 0.0.0!!\")\n          props.pomodoroTimerKiller();\n        return }\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        localStorage.setItem('hours', h);\n        localStorage.setItem('minutes', m);\n        localStorage.setItem('seconds', s);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n      React.useEffect(() => {\n        \n      }, [props.props.hours, props.props.minutes, props.props.seconds]);\n      \n\n    return (\n      <div>  \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.props.sessionCompleted ? \"Time's up!\" : ''}</div>\n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n"]},"metadata":{},"sourceType":"module"}