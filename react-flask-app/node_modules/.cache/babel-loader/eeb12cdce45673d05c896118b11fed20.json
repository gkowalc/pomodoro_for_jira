{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport { useState } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\";\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport useSound from 'use-sound';\nimport finishedSessionSound from '../../../../sounds/sound.wav';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PomodoroActiveSession = props => {\n  _s();\n\n  const [issoundplayinh, setsoundplaying] = useState(false);\n\n  const onClickHandler = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n        src: finishedSessionSound,\n        autoPlay: true,\n        controls: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  };\n\n  const pomodoroTimerKiller = nextStateName => {\n    onClickHandler();\n    props.changePomodoroViewState(props.nextStateName);\n    props.setnumberofsessions();\n    const list = [\"minutes\", \"seconds\", \"hours\"];\n    CacheCleaner(list);\n  };\n\n  useSound(finishedSessionSound, {\n    volume: 0.75\n  });\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const closeModal = () => {\n    setModalOpen(!modalOpen);\n    props.changePomodoroViewState(props.nextStateName);\n  };\n\n  const makeStop = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const toggleModal = () => {\n    console.log(\"trying to close nodal\");\n    setModalOpen(!modalOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PomodoRoTimer, {\n      props: props.timerdata,\n      pomodoroTimerKiller: pomodoroTimerKiller\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeStop,\n      children: \"Stop current session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n      src: finishedSessionSound,\n      autoPlay: true,\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: toggleModal,\n      contentLabel: \"My dialog2\",\n      className: \"mymodal\",\n      overlayClassName: \"myoverlay\",\n      closeTimeoutMS: 500,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Are you sure? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeStop,\n        children: \"go back to pomodoro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 14\n  }, this);\n};\n\n_s(PomodoroActiveSession, \"J8PPID7o/ihrM/LkSLMttnnE83Y=\", false, function () {\n  return [useSound];\n});\n\n_c = PomodoroActiveSession;\nexport default PomodoroActiveSession;\n\nvar _c;\n\n$RefreshReg$(_c, \"PomodoroActiveSession\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js"],"names":["React","useEffect","Modal","useState","PomodoRoTimer","CacheCleaner","useSound","finishedSessionSound","ReactAudioPlayer","PomodoroActiveSession","props","issoundplayinh","setsoundplaying","onClickHandler","pomodoroTimerKiller","nextStateName","changePomodoroViewState","setnumberofsessions","list","volume","modalOpen","setModalOpen","closeModal","makeStop","toggleModal","console","log","timerdata"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAwB,OAAxB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,oBAAP,MAAiC,8BAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AACE,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACC,cAAD,EAAiBC,eAAjB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMU,cAAc,GAAG,MAAM;AAE1B,wBAAQ;AAAA,6BAAK,QAAC,gBAAD;AACd,QAAA,GAAG,EAAEN,oBADS;AAEd,QAAA,QAAQ,EAAE,IAFI;AAGd,QAAA,QAAQ,EAAE;AAHI;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAR;AAIJ,GANC;;AAOA,QAAMO,mBAAmB,GAAIC,aAAD,IAAoB;AAC9CF,IAAAA,cAAc;AACdH,IAAAA,KAAK,CAACM,uBAAN,CAA8BN,KAAK,CAACK,aAApC;AACAL,IAAAA,KAAK,CAACO,mBAAN;AAEA,UAAMC,IAAI,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,CAAb;AACAb,IAAAA,YAAY,CAACa,IAAD,CAAZ;AAEI,GARN;;AASAZ,EAAAA,QAAQ,CAACC,oBAAD,EAAuB;AAAEY,IAAAA,MAAM,EAAE;AAAV,GAAvB,CAAR;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMmB,UAAU,GAAG,MAAM;AAEvBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAV,IAAAA,KAAK,CAACM,uBAAN,CAA8BN,KAAK,CAACK,aAApC;AAED,GALD;;AAMA,QAAMQ,QAAQ,GAAG,MAAM;AACrBF,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,QAAMI,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAHD;;AAIC,sBAAQ;AAAA,4BACP,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEV,KAAK,CAACiB,SAA5B;AAAuC,MAAA,mBAAmB,EAAEb;AAA5D;AAAA;AAAA;AAAA;AAAA,YADO,eAET;AAAQ,MAAA,OAAO,EAAES,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFS,eAKL,QAAC,gBAAD;AACN,MAAA,GAAG,EAAEhB,oBADC;AAEN,MAAA,QAAQ,EAAE,IAFJ;AAGN,MAAA,QAAQ,EAAE;AAHJ;AAAA;AAAA;AAAA;AAAA,YALK,eAUL,QAAC,KAAD;AACF,MAAA,MAAM,EAAEa,SADN;AAEF,MAAA,cAAc,EAAEI,WAFd;AAGF,MAAA,YAAY,EAAC,YAHX;AAIF,MAAA,SAAS,EAAC,SAJR;AAKF,MAAA,gBAAgB,EAAC,WALf;AAMF,MAAA,cAAc,EAAE,GANd;AAAA,8BAQJ;AAAQ,QAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARI,oBAQkD;AAAQ,QAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAsBF,CAzDD;;GAAMd,qB;UAkBJH,Q;;;KAlBIG,qB;AA4DR,eAAeA,qBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport { useState} from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport useSound from 'use-sound';\n\nimport finishedSessionSound from '../../../../sounds/sound.wav'\nimport ReactAudioPlayer from 'react-audio-player';\n  const PomodoroActiveSession = (props) => {\n    const [issoundplayinh, setsoundplaying] = useState(false)\n    const onClickHandler = () => {\n    \n       return (<div><ReactAudioPlayer\n      src={finishedSessionSound}\n      autoPlay={true}\n      controls={false}/></div>)\n  }\n    const pomodoroTimerKiller = (nextStateName)  => {\n      onClickHandler();\n      props.changePomodoroViewState(props.nextStateName);\n      props.setnumberofsessions();\n      \n      const list = [\"minutes\", \"seconds\", \"hours\"]\n      CacheCleaner(list)\n      \n         }\n    useSound(finishedSessionSound, { volume: 0.75 })\n    \n\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n     \n      setModalOpen(!modalOpen)\n      props.changePomodoroViewState(props.nextStateName);\n  \n    }\n    const makeStop = () => {\n      setModalOpen(!modalOpen);\n    }\n    const toggleModal = () => {\n      console.log(\"trying to close nodal\")\n      setModalOpen(!modalOpen);\n    }\n     return (<div>\n      <PomodoRoTimer props={props.timerdata} pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n    <button onClick={makeStop}>\n        Stop current session\n        </button>\n        <ReactAudioPlayer\n  src={finishedSessionSound}\n  autoPlay={true}\n  controls={false}\n/>\n        <Modal\n      isOpen={modalOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog2\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={500}\n    >  \n    <button onClick={closeModal} >Are you sure? </button> <button onClick={makeStop} >go back to pomodoro</button>\n   \n    </Modal>\n  </div>)\n  }\n\n\nexport default PomodoroActiveSession;\n"]},"metadata":{},"sourceType":"module"}