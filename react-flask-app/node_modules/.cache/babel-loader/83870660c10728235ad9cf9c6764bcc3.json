{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst UpdateIssueTimelog = props => {\n  _s();\n\n  async function UpdateTicket() {\n    const completedSessionData = {\n      \"issuekey\": props.SelectedOptionIssue,\n      \"minutes\": props.SessionDuration\n    };\n    console.log(completedSessionData);\n    const response = await fetch('/updateTicket', {\n      method: 'POST',\n      body: JSON.stringify(completedSessionData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(response);\n  }\n\n  useEffect(() => {\n    console.log(\"updated\" + props.numberofSessions);\n    UpdateTicket();\n  }, [props.numberofSessions]);\n  return null; //  useEffect(() => {\n  //  const completedSessionData = {\n  //   \"issuekey\": SelectedOptionIssue, \n  //    \"minutes\": SessionDuration\n  //    }\n  //  }, [SelectedOptionIssue]);\n};\n\n_s(UpdateIssueTimelog, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UpdateIssueTimelog;\nexport default UpdateIssueTimelog;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateIssueTimelog\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/UpdateIssueTimelog.js"],"names":["React","useState","useEffect","UpdateIssueTimelog","props","UpdateTicket","completedSessionData","SelectedOptionIssue","SessionDuration","console","log","response","fetch","method","body","JSON","stringify","headers","numberofSessions"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AAIhC,iBAAeC,YAAf,GAA8B;AAC5B,UAAMC,oBAAoB,GAAG;AAC3B,kBAAYF,KAAK,CAACG,mBADS;AAE3B,iBAAWH,KAAK,CAACI;AAFU,KAA7B;AAIEC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ;AACF,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,IAAI,EAAIC,IAAI,CAACC,SAAL,CAAeV,oBAAf,CAFoC;AAG5CW,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHmC,KAAlB,CAA5B;AAQAR,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAED;;AACDT,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYN,KAAK,CAACc,gBAA9B;AACFb,IAAAA,YAAY;AACX,GAHM,EAGJ,CAACD,KAAK,CAACc,gBAAP,CAHI,CAAT;AAKA,SAAQ,IAAR,CA1BgC,CA2BlC;AACE;AACC;AACD;AACA;AACA;AAGL,CAnCD;;GAAMf,kB;;KAAAA,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nconst UpdateIssueTimelog = (props) => {\n\n  \n\n      async function UpdateTicket() {\n        const completedSessionData = {\n          \"issuekey\": props.SelectedOptionIssue, \n          \"minutes\": props.SessionDuration\n          }\n          console.log(completedSessionData)\n        const response = await fetch('/updateTicket', {\n          method: 'POST',\n          body:   JSON.stringify(completedSessionData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n          \n        })\n        console.log(response);\n        \n      }\n      useEffect(() => {\n          console.log(\"updated\" + props.numberofSessions)\n        UpdateTicket()\n        }, [props.numberofSessions]);\n\n      return (null) \n    //  useEffect(() => {\n      //  const completedSessionData = {\n       //   \"issuekey\": SelectedOptionIssue, \n      //    \"minutes\": SessionDuration\n      //    }\n      //  }, [SelectedOptionIssue]);\n  \n    \n}\n\nexport default UpdateIssueTimelog;"]},"metadata":{},"sourceType":"module"}