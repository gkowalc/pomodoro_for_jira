{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\";\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PomodoroBreakInProgress = props => {\n  _s();\n\n  const stopCurrentSession = nextStateName => {\n    props.changePomodoroViewState(props.nextStateName);\n  };\n\n  const pomodoroTimerKiller = nextStateName => {\n    props.changePomodoroViewState(props.nextStateName);\n    CacheCleaner([\"minutes\", \"seconds\", \"hours\"]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('seconds', seconds);\n    localStorage.setItem('minutes', minutes);\n    localStorage.setItem('hours', hours);\n  });\n\n  if (props.numberofsessions % props.settings.frequencyLongBreakDefaultplusCached != 0) {\n    const propslist = {\n      seconds: 0,\n      hours: 0,\n      minutes: props.settings.breakDurationDefaulttplusCached\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PomodoRoTimer, {\n        props: propslist,\n        pomodoroTimerKiller: pomodoroTimerKiller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCurrentSession,\n        children: \"Stop current short break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }, this);\n  } else {\n    const propslist = {\n      seconds: 0,\n      hours: 0,\n      minutes: props.settings.longBreakDurationDefaultplusCached\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PomodoRoTimer, {\n        props: propslist,\n        pomodoroTimerKiller: pomodoroTimerKiller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCurrentSession,\n        children: \"Stop current Long break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }, this);\n  }\n};\n\n_s(PomodoroBreakInProgress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PomodoroBreakInProgress;\nexport default PomodoroBreakInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"PomodoroBreakInProgress\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js"],"names":["React","useEffect","PomodoRoTimer","CacheCleaner","PomodoroBreakInProgress","props","stopCurrentSession","nextStateName","changePomodoroViewState","pomodoroTimerKiller","localStorage","setItem","seconds","minutes","hours","numberofsessions","settings","frequencyLongBreakDefaultplusCached","propslist","breakDurationDefaulttplusCached","longBreakDurationDefaultplusCached"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;;AACE,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAMC,kBAAkB,GAAIC,aAAD,IAAmB;AAC5CF,IAAAA,KAAK,CAACG,uBAAN,CAA8BH,KAAK,CAACE,aAApC;AACD,GAFD;;AAGA,QAAME,mBAAmB,GAAIF,aAAD,IAAoB;AAC9CF,IAAAA,KAAK,CAACG,uBAAN,CAA8BH,KAAK,CAACE,aAApC;AACAJ,IAAAA,YAAY,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,CAAD,CAAZ;AACD,GAHD;;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,OAAhC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCE,OAAhC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BG,KAA9B;AACC,GAJM,CAAT;;AAKC,MAAIT,KAAK,CAACU,gBAAN,GAAyBV,KAAK,CAACW,QAAN,CAAeC,mCAAxC,IAA+E,CAAnF,EAAqF;AAClF,UAAMC,SAAS,GAAG;AAACN,MAAAA,OAAO,EAAE,CAAV;AAAaE,MAAAA,KAAK,EAAE,CAApB;AAAuBD,MAAAA,OAAO,EAAER,KAAK,CAACW,QAAN,CAAeG;AAA/C,KAAlB;AACF,wBAAQ;AAAA,8BACN,QAAC,aAAD;AAAe,QAAA,KAAK,EAAED,SAAtB;AAAkC,QAAA,mBAAmB,EAAET;AAAvD;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAQ,QAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD,GAPA,MAQI;AACH,UAAMY,SAAS,GAAG;AAACN,MAAAA,OAAO,EAAE,CAAV;AAAaE,MAAAA,KAAK,EAAE,CAApB;AAAuBD,MAAAA,OAAO,EAAER,KAAK,CAACW,QAAN,CAAeI;AAA/C,KAAlB;AACA,wBAAQ;AAAA,8BACN,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEF,SAAtB;AAAkC,QAAA,mBAAmB,EAAET;AAAvD;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAQ,QAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD;AAEF,CA9BD;;GAAMF,uB;;KAAAA,uB;AAiCR,eAAeA,uBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\n  const PomodoroBreakInProgress = (props) => {\n    const stopCurrentSession = (nextStateName) => {\n      props.changePomodoroViewState(props.nextStateName)\n    }\n    const pomodoroTimerKiller = (nextStateName)  => {\n      props.changePomodoroViewState(props.nextStateName);\n      CacheCleaner([\"minutes\", \"seconds\", \"hours\"])\n    }\n    useEffect(() => {\n      localStorage.setItem('seconds', seconds)\n      localStorage.setItem('minutes', minutes) \n      localStorage.setItem('hours', hours) \n      })\n     if (props.numberofsessions % props.settings.frequencyLongBreakDefaultplusCached != 0){\n        const propslist = {seconds: 0, hours: 0, minutes: props.settings.breakDurationDefaulttplusCached}\n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current short break</button></div>)\n\n    }\n    else {\n      const propslist = {seconds: 0, hours: 0, minutes: props.settings.longBreakDurationDefaultplusCached}\n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current Long break</button></div>)\n\n    }\n  \n  }\n\n\nexport default PomodoroBreakInProgress;\n"]},"metadata":{},"sourceType":"module"}