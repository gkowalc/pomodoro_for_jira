{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './countdown.css';\nimport Project from '../../Project/Project';\nimport SelectedIssue from '../../Issue/SelectedIssue';\nimport StartNewPomodoroView from './countdown_phases/StartNewPomodoroView';\nimport ProjectIssueSelectorView from './countdown_phases/InitialStateSelectProject';\nimport Modal from \"react-modal\";\nimport PomodoroBreakView from './countdown_phases/PomodoroBreakView';\nimport PomodoroActiveSession from './countdown_phases/PomodoroActiveSession';\nimport PomodoroBreakInProgress from './countdown_phases/PomodoroBreakInProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartSession = () => {\n  switch (currentPomodoroState) {\n    case 'ProjectIssueSelectorView':\n      const changePomodoroViewState = nextTransition => {\n        setCurrentPomodoroState(nextTransition);\n      };\n\n      const props = (changePomodoroViewState, props.SelectedOptionIssue);\n      return /*#__PURE__*/_jsxDEV(ProjectIssueSelectorView, {\n        props: props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n\n    case 'StartNewPomodoroView':\n      return null // <StartNewPomodoroView startPomodoro={changePomodoroStatus}></StartNewPomodoroView>\n      ;\n  }\n};\n\n_c = StartSession;\nReact.useEffect(() => {\n  console.log(\"hello\");\n}, [props.SelectedOptionIssue, duringPomodoroBreak, breakTimerRunning]);\n\nconst SessionStatus = () => {};\n\n_c2 = SessionStatus;\nexport default StartSession;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StartSession\");\n$RefreshReg$(_c2, \"SessionStatus\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js"],"names":["React","useState","useEffect","Project","SelectedIssue","StartNewPomodoroView","ProjectIssueSelectorView","Modal","PomodoroBreakView","PomodoroActiveSession","PomodoroBreakInProgress","StartSession","currentPomodoroState","changePomodoroViewState","nextTransition","setCurrentPomodoroState","props","SelectedOptionIssue","console","log","duringPomodoroBreak","breakTimerRunning","SessionStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,iBAAP;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,oBAAP,MAAiC,yCAAjC;AACA,OAAOC,wBAAP,MAAqC,8CAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,OAAOC,uBAAP,MAAoC,4CAApC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAEvB,UAAOC,oBAAP;AACA,SAAK,0BAAL;AACE,YAAMC,uBAAuB,GAAIC,cAAD,IAAoB;AAClDC,QAAAA,uBAAuB,CAACD,cAAD,CAAvB;AACD,OAFD;;AAGA,YAAME,KAAK,IAAIH,uBAAuB,EAAEG,KAAK,CAACC,mBAAnC,CAAX;AACA,0BACE,QAAC,wBAAD;AAA0B,QAAA,KAAK,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF;;AAGF,SAAK,sBAAL;AACE,aAAQ,IAAR,CACC;AADD;AAVF;AAeA,CAjBJ;;KAAML,Y;AAkBHX,KAAK,CAACE,SAAN,CAAgB,MAAM;AACtBgB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,CAFA,EAEE,CAACH,KAAK,CAACC,mBAAP,EAA4BG,mBAA5B,EAAiDC,iBAAjD,CAFF;;AAGA,MAAMC,aAAa,GAAG,MAAM,CAE3B,CAFD;;MAAMA,a;AAIN,eAAeX,YAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './countdown.css'\n\nimport Project from '../../Project/Project';\nimport SelectedIssue from '../../Issue/SelectedIssue';\nimport StartNewPomodoroView from './countdown_phases/StartNewPomodoroView';\nimport ProjectIssueSelectorView from './countdown_phases/InitialStateSelectProject';\nimport Modal from \"react-modal\";\n\nimport PomodoroBreakView from './countdown_phases/PomodoroBreakView';\nimport PomodoroActiveSession from './countdown_phases/PomodoroActiveSession';\nimport PomodoroBreakInProgress from './countdown_phases/PomodoroBreakInProgress';\n\nconst StartSession = () => {\n\n    switch(currentPomodoroState ) {\n    case 'ProjectIssueSelectorView':\n      const changePomodoroViewState = (nextTransition) => {\n        setCurrentPomodoroState(nextTransition)\n      }\n      const props = (changePomodoroViewState, props.SelectedOptionIssue)\n      return (\n        <ProjectIssueSelectorView props={props}></ProjectIssueSelectorView>\n        )\n    case 'StartNewPomodoroView':\n      return( null\n       // <StartNewPomodoroView startPomodoro={changePomodoroStatus}></StartNewPomodoroView>\n         )\n  \n    }\n   }    \n   React.useEffect(() => {\n   console.log(\"hello\")\n  }, [props.SelectedOptionIssue, duringPomodoroBreak, breakTimerRunning]);\n   const SessionStatus = () => {\n  \n   }\n\n   export default StartSession;"]},"metadata":{},"sourceType":"module"}