{"ast":null,"code":"var _jsxFileName = \"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './selectedissue.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectedIssue = props => {\n  _s();\n\n  const [IssueKeys, setIssueKeys] = useState(localStorage.getItem('IssueKeys'));\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState(localStorage.getItem('IssueKeyPlusSummary') || {});\n\n  const fetchIssueHandler = async () => {\n    if (props.selectedProject != undefined) {\n      var url = '/getIssueKeys/' + props.selectedProject;\n      const response = await fetch(url);\n      const json = await response.json();\n      setIssueKeys(json);\n      localStorage.setItem('IssueKeys', IssueKeys);\n    }\n  };\n\n  const fetchSummaryForIssueKey = async () => {\n    var temp_dict = {};\n\n    for (const i of IssueKeys) {\n      var url = '/getIssueSummary/' + i;\n      const response = await fetch(url);\n      const json = await response.json();\n      temp_dict[i] = json;\n    }\n\n    setIssueKeyPlusSummary(temp_dict);\n    localStorage.setItem('IssueKeyPlusSummary', IssueKeyPlusSummary);\n  };\n\n  useEffect(() => {\n    if (props.selectedProject != undefined) {\n      fetchIssueHandler();\n    }\n\n    props.setSelectedIssue();\n  }, [props.selectedProject]);\n  useEffect(() => {\n    setIssueKeyPlusSummary({});\n    fetchSummaryForIssueKey();\n  }, [IssueKeys]);\n\n  function Options({\n    options\n  }) {\n    return Object.values(options).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this));\n  }\n\n  function handleChange(event) {\n    const selectedValue = event.target.value;\n    var key = Object.keys(IssueKeyPlusSummary).filter(function (key) {\n      return IssueKeyPlusSummary[key] === selectedValue;\n    })[0];\n    props.setSelectedIssue(key);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectedissue\",\n    children: [\"Issue:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      name: \"selectIssueList\",\n      id: \"selectIssueList\",\n      value: IssueKeyPlusSummary[props.selectedIssue],\n      children: [\"\\xA0     \", /*#__PURE__*/_jsxDEV(Options, {\n        options: IssueKeyPlusSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectedIssue, \"EecGvIDO9mj3GH43yoJVjiEISes=\");\n\n_c = SelectedIssue;\nexport default SelectedIssue;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedIssue\");","map":{"version":3,"sources":["/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js"],"names":["React","useState","useEffect","SelectedIssue","props","IssueKeys","setIssueKeys","localStorage","getItem","IssueKeyPlusSummary","setIssueKeyPlusSummary","fetchIssueHandler","selectedProject","undefined","url","response","fetch","json","setItem","fetchSummaryForIssueKey","temp_dict","i","setSelectedIssue","Options","options","Object","values","map","option","handleChange","event","selectedValue","target","value","key","keys","filter","selectedIssue"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState(localStorage.getItem('IssueKeys'));\r\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState(localStorage.getItem('IssueKeyPlusSummary') || {});\r\n\r\n  const  fetchIssueHandler = async () => {\r\n    if (props.selectedProject != undefined) {\r\n    var url = '/getIssueKeys/' + props.selectedProject\r\n    const response = await fetch(url)\r\n    const json = await response.json()\r\n  setIssueKeys(json)\r\n  localStorage.setItem('IssueKeys', IssueKeys)\r\n}\r\n      };\r\n\r\n       const  fetchSummaryForIssueKey =  async () => {\r\n      \r\n          var temp_dict = {}\r\n          for (const i of IssueKeys) {\r\n            var url = '/getIssueSummary/' + i\r\n            const response = await fetch(url)\r\n            const json = await response.json()\r\n             temp_dict[i] = json       \r\n          }\r\n          setIssueKeyPlusSummary(temp_dict)\r\n          localStorage.setItem('IssueKeyPlusSummary', IssueKeyPlusSummary)\r\n         \r\n      }\r\n     \r\n     useEffect(() => {\r\n      if ( props.selectedProject != undefined) {\r\n      fetchIssueHandler();\r\n}     props.setSelectedIssue()\r\n        }, [props.selectedProject]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      setIssueKeyPlusSummary({});  \r\n      fetchSummaryForIssueKey();\r\n            }, [IssueKeys]);\r\n    \r\n\r\n    function Options({ options }) {\r\n        return (\r\n          Object.values(options).map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      const selectedValue = event.target.value\r\n     var key = Object.keys(IssueKeyPlusSummary).filter(function(key) {return IssueKeyPlusSummary[key] === selectedValue})[0];  \r\n     props.setSelectedIssue(key)\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={IssueKeyPlusSummary[props.selectedIssue]}>\r\n      Â      <Options options={IssueKeyPlusSummary} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n"]},"metadata":{},"sourceType":"module"}