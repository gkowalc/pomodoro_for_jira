[{"/Users/gkowalczyk/Documents/my-app/src/index.js":"1","/Users/gkowalczyk/Documents/my-app/src/App.js":"2","/Users/gkowalczyk/Documents/my-app/src/reportWebVitals.js":"3","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/index.js":"4","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/App.js":"5","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js":"6","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js":"7","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js":"8","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/countdown/Countdown.js":"9","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js":"10","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js":"11","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js":"12","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js":"13","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js":"14"},{"size":500,"mtime":1629203705712,"results":"15","hashOfConfig":"16"},{"size":528,"mtime":1629203705711,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1629203705713,"results":"18","hashOfConfig":"16"},{"size":500,"mtime":1629204187804,"results":"19","hashOfConfig":"20"},{"size":240,"mtime":1629204187797,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1629204187805,"results":"22","hashOfConfig":"20"},{"size":2486,"mtime":1629204187799,"results":"23","hashOfConfig":"20"},{"size":907,"mtime":1629204187798,"results":"24","hashOfConfig":"20"},{"size":2492,"mtime":1629204187803,"results":"25","hashOfConfig":"20"},{"size":1138,"mtime":1629204187800,"results":"26","hashOfConfig":"20"},{"size":315,"mtime":1629204187802,"results":"27","hashOfConfig":"20"},{"size":2209,"mtime":1629204187797,"results":"28","hashOfConfig":"20"},{"size":1508,"mtime":1629204187799,"results":"29","hashOfConfig":"20"},{"size":1265,"mtime":1629204187803,"results":"30","hashOfConfig":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vwfiyu",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u45g17",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/gkowalczyk/Documents/my-app/src/index.js",[],"/Users/gkowalczyk/Documents/my-app/src/App.js",[],"/Users/gkowalczyk/Documents/my-app/src/reportWebVitals.js",[],"/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/index.js",[],"/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/App.js",["66"],"\nimport './App.css';\n\nimport TopMenu from './components/HeaderMenu/TopMenu';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n  return (\n    <div>\n\n      <MainPanel>\n      </MainPanel>\n    </div>\n  );\n}\n\nexport default App;","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js",[],"/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js",["67","68","69","70"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './MainPanel.css' \r\nimport CoutdownCompontent from './countdown/Countdown';\r\nimport TopMenu from './HeaderMenu/TopMenu';\r\nimport Project from './Project/Project';\r\nimport SelectedIssue from './Issue/SelectedIssue'; \r\n\r\nimport CompletedSessionCounter from './countdown/CompletedSessionsCounter/CompletedSessionCounter';\r\nconst MainPanel = () => {\r\nconst [numberofSessions, setNumberOfSessions] = useState(0)\r\nconst [selectedProject, setSelectedProject] = useState()\r\nconst [SelectedOptionIssue, setSelectedIssue] = useState();\r\nconst [SessionDuration, setSessioNDuration] = useState(25);\r\n\r\n// props for setting component\r\n// const [ sessionDuration, setSessionDuration ] = useState(25);\r\n//const [ breakDuration, setbreakDuration ] = useState(5);\r\n//const [ longBreakDuration, setLongBreakDuration ] = useState(25);\r\n//const [frequencyLongBreak, setfrequencyLongBreak ] = useState(4);\r\n\r\nuseEffect(() => {\r\n   UpdateTicket()\r\n  }, [numberofSessions]);\r\n\r\n  async function UpdateTicket() {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n      console.log(completedSessionData)\r\n    const response = await fetch('http://localhost:5000/updateTicket', {\r\n      method: 'POST',\r\n      body:   JSON.stringify(completedSessionData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    //const data = await response.json();\r\n    // console.log(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n      console.log(completedSessionData)\r\n      \r\n    }, [SelectedOptionIssue]);\r\n\r\n  return (\r\n    <div className='mainpanelcss'>\r\n      <TopMenu></TopMenu>\r\n      <CoutdownCompontent numberofSessions={numberofSessions} setNumberOfSessions={setNumberOfSessions}>\r\n      </CoutdownCompontent>\r\n      <Project selectedProject={selectedProject} setSelectedProject={setSelectedProject}></Project>\r\n      <SelectedIssue selectedProject={selectedProject} selectedIssue={SelectedOptionIssue} setSelectedIssue={setSelectedIssue}> </SelectedIssue>\r\n      <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\r\n      \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n// <img src='https://i.kym-cdn.com/entries/icons/original/000/028/021/work.jpg' width='400' ></img>\r\n     ","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js",[],"/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/countdown/Countdown.js",["71","72","73","74","75","76","77"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './countdown.css'\r\nimport PomodoRoTimer from './pomodorotimer/pomodoroTimer';\r\nconst CoutdownCompontent = (props) => {\r\n // read values  from Settings component cache\r\n    const sessionDurationFromSettingsComponent = (localStorage.getItem('sessionDuration') || 25)\r\n    const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\r\n    const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\r\n    const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\r\n    const hours = 0;\r\n    const minutes = sessionDurationFromSettingsComponent;\r\n    const seconds = (localStorage.getItem('seconds') || 0); \r\n\r\n    // updates pomodoro minutes value if changed by settings component\r\n    React.useEffect(() => {\r\n      const minutes = sessionDurationFromSettingsComponent;\r\n    }, [sessionDurationFromSettingsComponent]);\r\n\r\n    const cacheBooleanToString = () => {\r\n      switch(localStorage.getItem('ispaused')){\r\n        case \"true\":  return true\r\n        case \"false\": return false\r\n      }\r\n\r\n    }\r\n\r\n    const [paused, setPaused] = useState(cacheBooleanToString);\r\n    const [sessionCompleted, setsSssionCompleted] = useState(false);\r\n\r\n\r\n\r\n    // saves times data to cache\r\n    React.useEffect(() => {\r\n      localStorage.setItem('hours', hours);\r\n      localStorage.setItem('minutes', minutes);\r\n      localStorage.setItem('seconds', seconds);\r\n    }, [hours, minutes, seconds]);\r\n    \r\n  \r\n \r\n    // counts  number of completed sessions\r\n    //useEffect(() => {\r\n     // if (sessionCompleted) {\r\n      //  setsSssionCompleted(numberofSessions + 1 )\r\n      //}\r\n    //}, [sessionCompleted]);\r\n\r\n    const makePause = () => {setPaused(!paused)\r\n      localStorage.setItem('ispaused', !paused)\r\n      \r\n  ;\r\n    }\r\n  const propsdata = {hours, minutes, seconds, paused, sessionCompleted}\r\n  \r\n  //const dataToParent = {\r\n  //numberofSessionsCompelted: numberofSessions,\r\n  //}   \r\n  //var data = numberofSessions\r\n  //props.blabla(dataToParent);\r\n\r\n    return (\r\n      <div>\r\n      <PomodoRoTimer propsdata={propsdata}></PomodoRoTimer>\r\n      <button onClick={makePause}>\r\n          {paused ? 'Resume' : 'Pause'}\r\n          </button>\r\n       \r\n      </div>\r\n      \r\n\r\n    );\r\n  };\r\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\r\n\r\n\r\nexport default CoutdownCompontent;\r\n\r\n","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js",[],"/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js",["78","79"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './completedsessioncounter.css'\r\n  const CompletedSessionCounter = (prop) => {\r\n\r\n    return (\r\n        <div> Current Sessions count : {prop.numberofSessions} </div>\r\n    \r\n      ); \r\n  }\r\n\r\n\r\nexport default CompletedSessionCounter;\r\n","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js",["80"],"\nimport React, { ReactDOM, useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nfunction Settings() {\n  const sessionDurationDefaultplusCached = (localStorage.getItem('sessionDuration') || 25)\n  const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\n  const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\n  const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\n\n\n\n    const [ sessionDuration, setSessionDuration ] = useState(\n      sessionDurationDefaultplusCached\n    );\n    const [ breakDuration, setbreakDuration ] = useState(\n      breakDurationDefaulttplusCached\n    );\n    const [ longBreakDuration, setLongBreakDuration ] = useState(\n      longBreakDurationDefaultplusCached\n    );\n    const [frequencyLongBreak, setfrequencyLongBreak ] = useState(\n      frequencyLongBreakDefaultplusCached\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('sessionDuration', sessionDuration);\n    }, [sessionDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('breakduration', breakDuration);\n    }, [breakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('longBreakDuration',longBreakDuration);\n    }, [longBreakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('frequencyLongBreak', frequencyLongBreak);\n    }, [frequencyLongBreak]);\n  return (\n    <div> \n        Enter Session Duration\n    <RangeSlider\n    value={sessionDuration}\n    onChange={changeEvent => setSessionDuration(changeEvent.target.value)}\n  />\n          Enter Break Duration\n    <RangeSlider\n    value={breakDuration}\n    onChange={changeEvent => setbreakDuration(changeEvent.target.value)}\n  />\n          Enter  Long Break Duration\n    <RangeSlider\n    value={longBreakDuration}\n    onChange={changeEvent => setLongBreakDuration(changeEvent.target.value)}\n  />\n          Frequency long break\n    <RangeSlider\n    value={frequencyLongBreak}\n    onChange={changeEvent => setfrequencyLongBreak(changeEvent.target.value)}\n  />\n  \n\n  </div>\n  );\n}\n\n\nexport default Settings","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js",["81","82","83"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState([]);\r\n  // const [SelectedOptionIssue, setSelectedIssue] = useState();\r\n  \r\n  function FetchIssueHandler() {\r\n    console.log(props.selectedProject)\r\n    if (props.selectedProject != undefined) {\r\n    var url = 'http://localhost:5000/getIssueKeys/' + props.selectedProject\r\n    console.log('kurwa' + url)\r\n    fetch(url)\r\n    .then(response => response.json())\r\n  .then(data => \r\n  setIssueKeys(data));\r\n}\r\n      };\r\n     \r\n     useEffect(() => {\r\n      console.log(props.selectedProject)\r\n      if ( props.selectedProject != undefined) {\r\n        FetchIssueHandler();\r\n        console.log('hello' + props.selectedProject) }\r\n        }, [props.selectedProject]);\r\n\r\n\r\n\r\n    function Options({ options }) {\r\n        return (\r\n            options.map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      props.setSelectedIssue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={props.SelectedOptionIssue}>\r\n      <Options options={IssueKeys} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n","/Users/gkowalczyk/Documents/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js",["84"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.propsdata.hours, props.propsdata.minutes, props.propsdata.seconds]);\n    console.log([h, m, s])\n    const tick = () => {\n        \n        if ((props.propsdata.paused) || props.propsdata.sessionCompleted) return;\n        if (h === 0 && m === 0 && s === 0) props.propsdata.setsSssionCompleted(true);\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n\n\n    return (\n      <div>\n        \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.propsdata.sessionCompleted ? \"Time's up!\" : ''}</div>\n       \n       \n       \n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n",{"ruleId":"85","severity":1,"message":"86","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":15},{"ruleId":"85","severity":1,"message":"89","line":14,"column":25,"nodeType":"87","messageId":"88","endLine":14,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":24,"column":6,"nodeType":"92","endLine":24,"endColumn":24,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":32,"column":11,"nodeType":"87","messageId":"88","endLine":32,"endColumn":19},{"ruleId":"90","severity":1,"message":"95","line":50,"column":8,"nodeType":"92","endLine":50,"endColumn":29,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":2,"column":20,"nodeType":"87","messageId":"88","endLine":2,"endColumn":29},{"ruleId":"85","severity":1,"message":"98","line":8,"column":11,"nodeType":"87","messageId":"88","endLine":8,"endColumn":42},{"ruleId":"85","severity":1,"message":"99","line":9,"column":11,"nodeType":"87","messageId":"88","endLine":9,"endColumn":45},{"ruleId":"85","severity":1,"message":"100","line":10,"column":11,"nodeType":"87","messageId":"88","endLine":10,"endColumn":46},{"ruleId":"85","severity":1,"message":"101","line":17,"column":13,"nodeType":"87","messageId":"88","endLine":17,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":21,"column":7,"nodeType":"104","messageId":"105","endLine":24,"endColumn":8},{"ruleId":"85","severity":1,"message":"106","line":29,"column":30,"nodeType":"87","messageId":"88","endLine":29,"endColumn":49},{"ruleId":"85","severity":1,"message":"107","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"97","line":2,"column":20,"nodeType":"87","messageId":"88","endLine":2,"endColumn":29},{"ruleId":"85","severity":1,"message":"108","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":12,"column":31,"nodeType":"111","messageId":"112","endLine":12,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":24,"column":34,"nodeType":"111","messageId":"112","endLine":24,"endColumn":36},{"ruleId":"90","severity":1,"message":"113","line":27,"column":12,"nodeType":"92","endLine":27,"endColumn":35,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":16,"column":22,"nodeType":"111","messageId":"112","endLine":16,"endColumn":24},"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'setSessioNDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTicket'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SessionDuration'. Either include it or remove the dependency array.",["117"],"'useEffect' is defined but never used.","'breakDurationDefaulttplusCached' is assigned a value but never used.","'longBreakDurationDefaultplusCached' is assigned a value but never used.","'frequencyLongBreakDefaultplusCached' is assigned a value but never used.","'minutes' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setsSssionCompleted' is assigned a value but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'FetchIssueHandler'. Either include it or remove the dependency array.",["118"],"Expected '===' and instead saw '=='.",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [UpdateTicket, numberofSessions]",{"range":"125","text":"126"},"Update the dependencies array to be: [SelectedOptionIssue, SessionDuration]",{"range":"127","text":"128"},"Update the dependencies array to be: [FetchIssueHandler, props.selectedProject]",{"range":"129","text":"130"},[1012,1030],"[UpdateTicket, numberofSessions]",[1736,1757],"[SelectedOptionIssue, SessionDuration]",[826,849],"[FetchIssueHandler, props.selectedProject]"]