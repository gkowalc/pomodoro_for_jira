[{"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js":"1","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js":"2","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js":"3","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js":"4","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js":"5","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js":"6","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js":"7","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js":"8","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js":"9","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js":"10","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js":"11","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js":"12","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js":"13","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js":"14","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js":"15","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js":"16","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js":"17","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js":"18","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/CacheCleaner.js":"19"},{"size":500,"mtime":1633806966603,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1633806966603,"results":"22","hashOfConfig":"21"},{"size":240,"mtime":1633806966603,"results":"23","hashOfConfig":"21"},{"size":907,"mtime":1633806966603,"results":"24","hashOfConfig":"21"},{"size":2244,"mtime":1635165649871,"results":"25","hashOfConfig":"21"},{"size":2209,"mtime":1633806966603,"results":"26","hashOfConfig":"21"},{"size":1071,"mtime":1634387583292,"results":"27","hashOfConfig":"21"},{"size":315,"mtime":1633806966603,"results":"28","hashOfConfig":"21"},{"size":2103,"mtime":1634387617264,"results":"29","hashOfConfig":"21"},{"size":1510,"mtime":1634829316159,"results":"30","hashOfConfig":"21"},{"size":313,"mtime":1634214319498,"results":"31","hashOfConfig":"21"},{"size":3622,"mtime":1635101328892,"results":"32","hashOfConfig":"21"},{"size":511,"mtime":1634822135497,"results":"33","hashOfConfig":"21"},{"size":355,"mtime":1634824919187,"results":"34","hashOfConfig":"21"},{"size":1441,"mtime":1635166776820,"results":"35","hashOfConfig":"21"},{"size":1351,"mtime":1635166949672,"results":"36","hashOfConfig":"21"},{"size":1317,"mtime":1635166886732,"results":"37","hashOfConfig":"21"},{"size":2571,"mtime":1635165759159,"results":"38","hashOfConfig":"21"},{"size":279,"mtime":1635166759332,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"12skugr",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js",[],["88","89"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js",["90"],"\nimport './App.css';\n\nimport TopMenu from './components/HeaderMenu/TopMenu';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n  return (\n    <div>\n\n      <MainPanel>\n      </MainPanel>\n    </div>\n  );\n}\n\nexport default App;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js",["91","92","93","94","95","96"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './MainPanel.css' \r\nimport CoutdownCompontent from './countdown/countdown_controller/Countdown';\r\nimport TopMenu from './HeaderMenu/TopMenu';\r\nimport Project from './Project/Project';\r\nimport SelectedIssue from './Issue/SelectedIssue'; \r\nimport CompletedSessionCounter from './countdown/CompletedSessionsCounter/CompletedSessionCounter';\r\nimport CacheCleaner from '../helperfunctions/CacheCleaner';\r\nconst MainPanel = () => {\r\n\r\nconst [numberofSessions, setNumberOfSessions] = useState(0)\r\nconst [selectedProject, setSelectedProject] = useState()\r\nconst [SelectedOptionIssue, setSelectedIssue] = useState();\r\nconst [SessionDuration, setSessionDuration] = useState();\r\n\r\nuseEffect(() => {\r\n   UpdateTicket()\r\n  }, [numberofSessions]);\r\n\r\n  useEffect(() => {\r\n\r\n   }, [selectedProject]);\r\n\r\n  async function UpdateTicket() {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    const response = await fetch('/updateTicket', {\r\n      method: 'POST',\r\n      body:   JSON.stringify(completedSessionData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  const incrementNumberOfCompletedPomodoro = () => {\r\n    setNumberOfSessions(numberofSessions + 1)\r\n  }\r\n  useEffect(() => {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    \r\n      \r\n    }, [SelectedOptionIssue]);\r\n// \r\n  return (\r\n    <div className='mainpanelcss'>\r\n      <TopMenu></TopMenu>\r\n      <CoutdownCompontent numberofSessions={numberofSessions} setNumberOfSessions={incrementNumberOfCompletedPomodoro} selectedProject={selectedProject} SelectedOptionIssue={SelectedOptionIssue}>\r\n </CoutdownCompontent>\r\n      <Project selectedProject={selectedProject} setSelectedProject={setSelectedProject}></Project>\r\n      <SelectedIssue selectedProject={selectedProject} selectedIssue={SelectedOptionIssue} setSelectedIssue={setSelectedIssue}> </SelectedIssue>\r\n      <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\r\n      \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js",["97"],"\nimport React, { ReactDOM, useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nfunction Settings() {\n  const sessionDurationDefaultplusCached = (localStorage.getItem('sessionDuration') || 25)\n  const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\n  const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\n  const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\n\n\n\n    const [ sessionDuration, setSessionDuration ] = useState(\n      sessionDurationDefaultplusCached\n    );\n    const [ breakDuration, setbreakDuration ] = useState(\n      breakDurationDefaulttplusCached\n    );\n    const [ longBreakDuration, setLongBreakDuration ] = useState(\n      longBreakDurationDefaultplusCached\n    );\n    const [frequencyLongBreak, setfrequencyLongBreak ] = useState(\n      frequencyLongBreakDefaultplusCached\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('sessionDuration', sessionDuration);\n    }, [sessionDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('breakduration', breakDuration);\n    }, [breakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('longBreakDuration',longBreakDuration);\n    }, [longBreakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('frequencyLongBreak', frequencyLongBreak);\n    }, [frequencyLongBreak]);\n  return (\n    <div> \n        Enter Session Duration\n    <RangeSlider\n    value={sessionDuration}\n    onChange={changeEvent => setSessionDuration(changeEvent.target.value)}\n  />\n          Enter Break Duration\n    <RangeSlider\n    value={breakDuration}\n    onChange={changeEvent => setbreakDuration(changeEvent.target.value)}\n  />\n          Enter  Long Break Duration\n    <RangeSlider\n    value={longBreakDuration}\n    onChange={changeEvent => setLongBreakDuration(changeEvent.target.value)}\n  />\n          Frequency long break\n    <RangeSlider\n    value={frequencyLongBreak}\n    onChange={changeEvent => setfrequencyLongBreak(changeEvent.target.value)}\n  />\n  \n\n  </div>\n  );\n}\n\n\nexport default Settings","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js",["98","99"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './completedsessioncounter.css'\r\n  const CompletedSessionCounter = (prop) => {\r\n\r\n    return (\r\n        <div> Current Sessions count : {prop.numberofSessions} </div>\r\n    \r\n      ); \r\n  }\r\n\r\n\r\nexport default CompletedSessionCounter;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js",["100","101","102","103"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState([]);\r\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState({});\r\n\r\n  const  fetchIssueHandler = async () => {\r\n    if (props.selectedProject != undefined) {\r\n    var url = '/getIssueKeys/' + props.selectedProject\r\n    const response = await fetch(url)\r\n    const json = await response.json()\r\n  setIssueKeys(json)\r\n}\r\n      };\r\n\r\n       const  fetchSummaryForIssueKey =  async () => {\r\n      \r\n          var temp_dict = {}\r\n          for (const i of IssueKeys) {\r\n            var url = '/getIssueSummary/' + i\r\n            const response = await fetch(url)\r\n            const json = await response.json()\r\n             temp_dict[i] = json       \r\n          }\r\n          setIssueKeyPlusSummary(temp_dict)\r\n         \r\n      }\r\n     \r\n     useEffect(() => {\r\n      if ( props.selectedProject != undefined) {\r\n      fetchIssueHandler();\r\n}     props.setSelectedIssue()\r\n        }, [props.selectedProject]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      setIssueKeyPlusSummary({});  \r\n      fetchSummaryForIssueKey();\r\n            }, [IssueKeys]);\r\n    \r\n\r\n    function Options({ options }) {\r\n        return (\r\n          Object.values(options).map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      const selectedValue = event.target.value\r\n     var key = Object.keys(IssueKeyPlusSummary).filter(function(key) {return IssueKeyPlusSummary[key] === selectedValue})[0];  \r\n     props.setSelectedIssue(key)\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={IssueKeyPlusSummary[props.selectedIssue]}>\r\n            <Options options={IssueKeyPlusSummary} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js",["104","105","106","107"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.props.hours, props.props.minutes, props.props.seconds]);\n    console.log([h, m, s])\n\n    const tick = () => {\n        \n        if ((props.props.paused) || props.props.sessionCompleted) return;\n        if (h == 0 && m == 0 && s == 0) {\n          console.log(\"it is 0.0.0!!\")\n          props.pomodoroTimerKiller();\n        return }\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        localStorage.setItem('hours', h);\n        localStorage.setItem('minutes', m);\n        localStorage.setItem('seconds', s);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n      React.useEffect(() => {\n        \n      }, [props.props.hours, props.props.minutes, props.props.seconds]);\n      \n\n    return (\n      <div>  \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.props.sessionCompleted ? \"Time's up!\" : ''}</div>\n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js",["108","109"],"\nimport React, { useState, useEffect } from 'react';\n\nconst Options = ({props}) => {\n    return (\n        Object.values(props).map(option => \n                    <option>                                   \n                    {option}\n                    </option>)\n                   );\n}\nexport default Options;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './countdown.css'\r\nimport StartSession from './StartSession';\r\nimport Project from '../../Project/Project';\r\nimport SelectedIssue from '../../Issue/SelectedIssue';\r\nimport StartNewPomodoroView from './countdown_phases/StartNewPomodoroView';\r\nimport ProjectIssueSelectorView from './countdown_phases/InitialStateSelectProject';\r\nimport Modal from \"react-modal\";\r\n\r\nimport PomodoroBreakView from './countdown_phases/PomodoroBreakView';\r\nimport PomodoroActiveSession from './countdown_phases/PomodoroActiveSession';\r\nimport PomodoroBreakInProgress from './countdown_phases/PomodoroBreakInProgress';\r\nconst CoutdownCompontent = (props) => {\r\n // read values  from Settings component cache\r\n    const sessionDurationFromSettingsComponent = (localStorage.getItem('sessionDuration') || 2 )\r\n    const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 1)\r\n    const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\r\n    const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 3)\r\n    const hours = localStorage.getItem('hours') || 0;\r\n    // const minutes = (localStorage.getItem('minutes') || sessionDurationFromSettingsComponent);\r\n    const minutes = (localStorage.getItem('minutes') || 0);\r\n    \r\n    const seconds = (localStorage.getItem('seconds') || 3); \r\n\r\n\r\n// updates pomodoro minutes value if changed by settings component\r\n  //  React.useEffect(() => {\r\n   //   const minutes = sessionDurationFromSettingsComponent;\r\n  //  }, [sessionDurationFromSettingsComponent]);\r\n\r\n    //const cacheBooleanToString = () => {\r\n     // switch(localStorage.getItem('ispaused')){\r\n     //   case \"true\":  return true\r\n      //  case \"false\": return false\r\n     // }\r\n\r\n    //}\r\n \r\n    const [numberofsessions, setnumberofsessions] = useState(0);\r\n    const [numberofBreaks, setnumberofBreaks] = useState(0);\r\n    const [numberOfLongBreaks, setnumberOfLongBreaks] = useState(0);\r\n\r\n    const [pomodoroRunning, setStartPomodoro] = useState(false);\r\n  \r\n    const [breakTimerRunning, setBreakTimerRunning] = useState(false);\r\n  \r\n    const  [currentPomodoroState, setCurrentPomodoroState] = useState(\"ProjectIssueSelectorView\");\r\n\r\n    const startPomodoroBreak = () => {\r\n      setBreakTimerRunning(!breakTimerRunning)\r\n    }\r\n    const setnumberofCompeltedBreaks = () => {\r\n      setnumberofBreaks(numberofBreaks +1)\r\n    }\r\n\r\n    const incremenetPomodoroSession = () => {\r\n      setBreakTimerRunning(!breakTimerRunning)\r\n    }\r\n\r\n    const changePomodoroStatus = () => {\r\n      setStartPomodoro(!pomodoroRunning)\r\n    }\r\n    \r\n    const changePomodoroViewState = (nextTransition) => {\r\n      setCurrentPomodoroState(nextTransition)\r\n    }\r\n  \r\n const timerdata = {hours, minutes, seconds}\r\n const settings = {sessionDurationFromSettingsComponent, breakDurationDefaulttplusCached, longBreakDurationDefaultplusCached, frequencyLongBreakDefaultplusCached}\r\n \r\n return (\r\n      <div> \r\n      <StartSession \r\n      numberofsessions={props.numberofSessions}\r\n      setnumberofsessions={props.setNumberOfSessions}\r\n      \r\n      settings={settings}\r\n       breakduration={breakDurationDefaulttplusCached}\r\n       props={timerdata}\r\n       changePomodoroStatus={changePomodoroStatus}\r\n      currentPomodoroState={currentPomodoroState}\r\n      changePomodoroViewState={changePomodoroViewState} \r\n      SelectedOptionIssue={props.SelectedOptionIssue} \r\n      \r\n      ></StartSession>\r\n             </div>\r\n\r\n    );\r\n  };\r\n  \r\n\r\nexport default CoutdownCompontent;\r\n\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js",["126","127","128"],"import React from 'react';\n  const ProjectIssueSelectorView = (props) => {\n    console.log(props.nextStateName)\n    React.useEffect(() => {\n      if (props.props.SelectedOptionIssue != undefined) {\n        const xx = props.nextStateName\n        props.props.changePomodoroViewState(props.nextStateName)\n      }\n       }, [props.props.SelectedOptionIssue]);\n        return (<div>\n          Select Project/issue to start the pomodoro session!\n        </div>)\n       \n  }\n\n\nexport default ProjectIssueSelectorView;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js",["129"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js",["130"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js",["131","132","133","134","135"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/CacheCleaner.js",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},{"ruleId":"142","severity":1,"message":"146","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":15,"column":25,"nodeType":"144","messageId":"145","endLine":15,"endColumn":43},{"ruleId":"148","severity":1,"message":"149","line":19,"column":6,"nodeType":"150","endLine":19,"endColumn":24,"suggestions":"151"},{"ruleId":"142","severity":1,"message":"152","line":30,"column":11,"nodeType":"144","messageId":"145","endLine":30,"endColumn":19},{"ruleId":"142","severity":1,"message":"153","line":44,"column":11,"nodeType":"144","messageId":"145","endLine":44,"endColumn":31},{"ruleId":"148","severity":1,"message":"154","line":50,"column":8,"nodeType":"150","endLine":50,"endColumn":29,"suggestions":"155"},{"ruleId":"142","severity":1,"message":"156","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":25},{"ruleId":"142","severity":1,"message":"157","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"158","line":2,"column":20,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":11,"column":31,"nodeType":"161","messageId":"162","endLine":11,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":33,"column":34,"nodeType":"161","messageId":"162","endLine":33,"endColumn":36},{"ruleId":"148","severity":1,"message":"163","line":36,"column":12,"nodeType":"150","endLine":36,"endColumn":35,"suggestions":"164"},{"ruleId":"148","severity":1,"message":"165","line":43,"column":16,"nodeType":"150","endLine":43,"endColumn":27,"suggestions":"166"},{"ruleId":"159","severity":1,"message":"167","line":13,"column":15,"nodeType":"161","messageId":"162","endLine":13,"endColumn":17},{"ruleId":"159","severity":1,"message":"167","line":13,"column":25,"nodeType":"161","messageId":"162","endLine":13,"endColumn":27},{"ruleId":"159","severity":1,"message":"167","line":13,"column":35,"nodeType":"161","messageId":"162","endLine":13,"endColumn":37},{"ruleId":"159","severity":1,"message":"167","line":20,"column":22,"nodeType":"161","messageId":"162","endLine":20,"endColumn":24},{"ruleId":"142","severity":1,"message":"157","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":36},{"ruleId":"142","severity":1,"message":"158","line":2,"column":20,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"142","severity":1,"message":"168","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":15},{"ruleId":"142","severity":1,"message":"169","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":21},{"ruleId":"142","severity":1,"message":"170","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":28},{"ruleId":"142","severity":1,"message":"171","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":32},{"ruleId":"142","severity":1,"message":"172","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":13},{"ruleId":"142","severity":1,"message":"173","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":25},{"ruleId":"142","severity":1,"message":"174","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":29},{"ruleId":"142","severity":1,"message":"175","line":13,"column":8,"nodeType":"144","messageId":"145","endLine":13,"endColumn":31},{"ruleId":"142","severity":1,"message":"176","line":40,"column":12,"nodeType":"144","messageId":"145","endLine":40,"endColumn":28},{"ruleId":"142","severity":1,"message":"177","line":40,"column":30,"nodeType":"144","messageId":"145","endLine":40,"endColumn":49},{"ruleId":"142","severity":1,"message":"178","line":42,"column":12,"nodeType":"144","messageId":"145","endLine":42,"endColumn":30},{"ruleId":"142","severity":1,"message":"179","line":42,"column":32,"nodeType":"144","messageId":"145","endLine":42,"endColumn":53},{"ruleId":"142","severity":1,"message":"180","line":50,"column":11,"nodeType":"144","messageId":"145","endLine":50,"endColumn":29},{"ruleId":"142","severity":1,"message":"181","line":53,"column":11,"nodeType":"144","messageId":"145","endLine":53,"endColumn":37},{"ruleId":"142","severity":1,"message":"182","line":57,"column":11,"nodeType":"144","messageId":"145","endLine":57,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":5,"column":43,"nodeType":"161","messageId":"162","endLine":5,"endColumn":45},{"ruleId":"142","severity":1,"message":"183","line":6,"column":15,"nodeType":"144","messageId":"145","endLine":6,"endColumn":17},{"ruleId":"148","severity":1,"message":"184","line":9,"column":11,"nodeType":"150","endLine":9,"endColumn":44,"suggestions":"185"},{"ruleId":"142","severity":1,"message":"158","line":2,"column":20,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":13,"column":86,"nodeType":"161","messageId":"162","endLine":13,"endColumn":88},{"ruleId":"186","severity":1,"message":"187","line":10,"column":5,"nodeType":"188","messageId":"189","endLine":55,"endColumn":2},{"ruleId":"142","severity":1,"message":"190","line":35,"column":15,"nodeType":"144","messageId":"145","endLine":35,"endColumn":39},{"ruleId":"142","severity":1,"message":"191","line":36,"column":15,"nodeType":"144","messageId":"145","endLine":36,"endColumn":36},{"ruleId":"142","severity":1,"message":"192","line":37,"column":15,"nodeType":"144","messageId":"145","endLine":37,"endColumn":43},{"ruleId":"193","severity":1,"message":"194","line":50,"column":11,"nodeType":"195","messageId":"196","endLine":50,"endColumn":36},{"ruleId":"142","severity":1,"message":"197","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"167","line":5,"column":23,"nodeType":"161","messageId":"162","endLine":5,"endColumn":25},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'CacheCleaner' is defined but never used.","'setSessionDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTicket'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'response' is assigned a value but never used.","'completedSessionData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SessionDuration'. Either include it or remove the dependency array.",["201"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'fetchIssueHandler' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["202"],"React Hook useEffect has a missing dependency: 'fetchSummaryForIssueKey'. Either include it or remove the dependency array.",["203"],"Expected '===' and instead saw '=='.","'Project' is defined but never used.","'SelectedIssue' is defined but never used.","'StartNewPomodoroView' is defined but never used.","'ProjectIssueSelectorView' is defined but never used.","'Modal' is defined but never used.","'PomodoroBreakView' is defined but never used.","'PomodoroActiveSession' is defined but never used.","'PomodoroBreakInProgress' is defined but never used.","'numberofsessions' is assigned a value but never used.","'setnumberofsessions' is assigned a value but never used.","'numberOfLongBreaks' is assigned a value but never used.","'setnumberOfLongBreaks' is assigned a value but never used.","'startPomodoroBreak' is assigned a value but never used.","'setnumberofCompeltedBreaks' is assigned a value but never used.","'incremenetPomodoroSession' is assigned a value but never used.","'xx' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.nextStateName' and 'props.props'. Either include them or remove the dependency array.",["204"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'nextStatePomdooroSession' is assigned a value but never used.","'nextStateBreakSession' is assigned a value but never used.","'nextStateLastStationkSession' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [UpdateTicket, numberofSessions]",{"range":"215","text":"216"},"Update the dependencies array to be: [SelectedOptionIssue, SessionDuration]",{"range":"217","text":"218"},"Update the dependencies array to be: [fetchIssueHandler, props, props.selectedProject]",{"range":"219","text":"220"},"Update the dependencies array to be: [IssueKeys, fetchSummaryForIssueKey]",{"range":"221","text":"222"},"Update the dependencies array to be: [props.nextStateName, props.props, props.props.SelectedOptionIssue]",{"range":"223","text":"224"},[794,812],"[UpdateTicket, numberofSessions]",[1511,1532],"[SelectedOptionIssue, SessionDuration]",[1078,1101],"[fetchIssueHandler, props, props.selectedProject]",[1224,1235],"[IssueKeys, fetchSummaryForIssueKey]",[320,353],"[props.nextStateName, props.props, props.props.SelectedOptionIssue]"]