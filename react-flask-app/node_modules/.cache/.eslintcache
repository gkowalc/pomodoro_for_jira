[{"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js":"1","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js":"2","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js":"3","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js":"4","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js":"5","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js":"6","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js":"7","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js":"8","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js":"9","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js":"10","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js":"11","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js":"12","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js":"13","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js":"14","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js":"15","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js":"16","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js":"17","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js":"18","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/CacheCleaner.js":"19"},{"size":500,"mtime":1633806966603,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1633806966603,"results":"22","hashOfConfig":"21"},{"size":240,"mtime":1633806966603,"results":"23","hashOfConfig":"21"},{"size":907,"mtime":1633806966603,"results":"24","hashOfConfig":"21"},{"size":2648,"mtime":1635247782403,"results":"25","hashOfConfig":"21"},{"size":2209,"mtime":1633806966603,"results":"26","hashOfConfig":"21"},{"size":1071,"mtime":1634387583292,"results":"27","hashOfConfig":"21"},{"size":315,"mtime":1633806966603,"results":"28","hashOfConfig":"21"},{"size":2172,"mtime":1635247871807,"results":"29","hashOfConfig":"21"},{"size":1510,"mtime":1634829316159,"results":"30","hashOfConfig":"21"},{"size":313,"mtime":1634214319498,"results":"31","hashOfConfig":"21"},{"size":3794,"mtime":1635186605034,"results":"32","hashOfConfig":"21"},{"size":511,"mtime":1635246877854,"results":"33","hashOfConfig":"21"},{"size":355,"mtime":1634824919187,"results":"34","hashOfConfig":"21"},{"size":1441,"mtime":1635246877854,"results":"35","hashOfConfig":"21"},{"size":1351,"mtime":1635166949672,"results":"36","hashOfConfig":"21"},{"size":1342,"mtime":1635187252431,"results":"37","hashOfConfig":"21"},{"size":2571,"mtime":1635246877854,"results":"38","hashOfConfig":"21"},{"size":279,"mtime":1635166759332,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"12skugr",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js",[],["90","91"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js",["92"],"\nimport './App.css';\n\nimport TopMenu from './components/HeaderMenu/TopMenu';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n  return (\n    <div>\n\n      <MainPanel>\n      </MainPanel>\n    </div>\n  );\n}\n\nexport default App;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js",["93","94","95","96","97","98"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js",["99"],"\nimport React, { ReactDOM, useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nfunction Settings() {\n  const sessionDurationDefaultplusCached = (localStorage.getItem('sessionDuration') || 25)\n  const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\n  const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\n  const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\n\n\n\n    const [ sessionDuration, setSessionDuration ] = useState(\n      sessionDurationDefaultplusCached\n    );\n    const [ breakDuration, setbreakDuration ] = useState(\n      breakDurationDefaulttplusCached\n    );\n    const [ longBreakDuration, setLongBreakDuration ] = useState(\n      longBreakDurationDefaultplusCached\n    );\n    const [frequencyLongBreak, setfrequencyLongBreak ] = useState(\n      frequencyLongBreakDefaultplusCached\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('sessionDuration', sessionDuration);\n    }, [sessionDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('breakduration', breakDuration);\n    }, [breakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('longBreakDuration',longBreakDuration);\n    }, [longBreakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('frequencyLongBreak', frequencyLongBreak);\n    }, [frequencyLongBreak]);\n  return (\n    <div> \n        Enter Session Duration\n    <RangeSlider\n    value={sessionDuration}\n    onChange={changeEvent => setSessionDuration(changeEvent.target.value)}\n  />\n          Enter Break Duration\n    <RangeSlider\n    value={breakDuration}\n    onChange={changeEvent => setbreakDuration(changeEvent.target.value)}\n  />\n          Enter  Long Break Duration\n    <RangeSlider\n    value={longBreakDuration}\n    onChange={changeEvent => setLongBreakDuration(changeEvent.target.value)}\n  />\n          Frequency long break\n    <RangeSlider\n    value={frequencyLongBreak}\n    onChange={changeEvent => setfrequencyLongBreak(changeEvent.target.value)}\n  />\n  \n\n  </div>\n  );\n}\n\n\nexport default Settings","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js",["100","101"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './completedsessioncounter.css'\r\n  const CompletedSessionCounter = (prop) => {\r\n\r\n    return (\r\n        <div> Current Sessions count : {prop.numberofSessions} </div>\r\n    \r\n      ); \r\n  }\r\n\r\n\r\nexport default CompletedSessionCounter;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js",["102","103","104","105"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js",["106","107","108","109"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.props.hours, props.props.minutes, props.props.seconds]);\n    console.log([h, m, s])\n\n    const tick = () => {\n        \n        if ((props.props.paused) || props.props.sessionCompleted) return;\n        if (h == 0 && m == 0 && s == 0) {\n          console.log(\"it is 0.0.0!!\")\n          props.pomodoroTimerKiller();\n        return }\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        localStorage.setItem('hours', h);\n        localStorage.setItem('minutes', m);\n        localStorage.setItem('seconds', s);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n      React.useEffect(() => {\n        \n      }, [props.props.hours, props.props.minutes, props.props.seconds]);\n      \n\n    return (\n      <div>  \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.props.sessionCompleted ? \"Time's up!\" : ''}</div>\n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js",["110","111"],"\nimport React, { useState, useEffect } from 'react';\n\nconst Options = ({props}) => {\n    return (\n        Object.values(props).map(option => \n                    <option>                                   \n                    {option}\n                    </option>)\n                   );\n}\nexport default Options;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './countdown.css'\r\nimport StartSession from './StartSession';\r\nimport Project from '../../Project/Project';\r\nimport SelectedIssue from '../../Issue/SelectedIssue';\r\nimport StartNewPomodoroView from './countdown_phases/StartNewPomodoroView';\r\nimport ProjectIssueSelectorView from './countdown_phases/InitialStateSelectProject';\r\nimport Modal from \"react-modal\";\r\n\r\nimport PomodoroBreakView from './countdown_phases/PomodoroBreakView';\r\nimport PomodoroActiveSession from './countdown_phases/PomodoroActiveSession';\r\nimport PomodoroBreakInProgress from './countdown_phases/PomodoroBreakInProgress';\r\nconst CoutdownCompontent = (props) => {\r\n // read values  from Settings component cache\r\n    const sessionDurationFromSettingsComponent = (localStorage.getItem('sessionDuration') || 2 )\r\n    const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 1)\r\n    const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\r\n    const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 3)\r\n    const hours = localStorage.getItem('hours') || 0;\r\n    // const minutes = (localStorage.getItem('minutes') || sessionDurationFromSettingsComponent);\r\n    const minutes = (localStorage.getItem('minutes') || 0);\r\n    \r\n    const seconds = (localStorage.getItem('seconds') || 3); \r\n\r\n\r\n// updates pomodoro minutes value if changed by settings component\r\n  //  React.useEffect(() => {\r\n   //   const minutes = sessionDurationFromSettingsComponent;\r\n  //  }, [sessionDurationFromSettingsComponent]);\r\n\r\n    //const cacheBooleanToString = () => {\r\n     // switch(localStorage.getItem('ispaused')){\r\n     //   case \"true\":  return true\r\n      //  case \"false\": return false\r\n     // }\r\n\r\n    //}\r\n \r\n    const [numberofsessions, setnumberofsessions] = useState();\r\n    const [numberofBreaks, setnumberofBreaks] = useState(0);\r\n    const [numberOfLongBreaks, setnumberOfLongBreaks] = useState(0);\r\n\r\n    const [pomodoroRunning, setStartPomodoro] = useState(false);\r\n  \r\n    const [breakTimerRunning, setBreakTimerRunning] = useState(false);\r\n  \r\n    const  [currentPomodoroState, setCurrentPomodoroState] = useState(localStorage.getItem(\"currentPomodoroState\") ||\"ProjectIssueSelectorView\");\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('currentPomodoroState', currentPomodoroState)}, [currentPomodoroState]);\r\n\r\n    const startPomodoroBreak = () => {\r\n      setBreakTimerRunning(!breakTimerRunning)\r\n    }\r\n    const setnumberofCompeltedBreaks = () => {\r\n      setnumberofBreaks(numberofBreaks +1)\r\n    }\r\n\r\n    const incremenetPomodoroSession = () => {\r\n      setBreakTimerRunning(!breakTimerRunning)\r\n    }\r\n\r\n    const changePomodoroStatus = () => {\r\n      setStartPomodoro(!pomodoroRunning)\r\n    }\r\n    \r\n    const changePomodoroViewState = (nextTransition) => {\r\n      setCurrentPomodoroState(nextTransition)\r\n    }\r\n  \r\n const timerdata = {hours, minutes, seconds}\r\n const settings = {sessionDurationFromSettingsComponent, breakDurationDefaulttplusCached, longBreakDurationDefaultplusCached, frequencyLongBreakDefaultplusCached}\r\n \r\n return (\r\n      <div> \r\n      <StartSession \r\n      numberofsessions={props.numberofSessions}\r\n      setnumberofsessions={props.setNumberOfSessions}\r\n      \r\n      settings={settings}\r\n       breakduration={breakDurationDefaulttplusCached}\r\n       props={timerdata}\r\n       changePomodoroStatus={changePomodoroStatus}\r\n      currentPomodoroState={currentPomodoroState}\r\n      changePomodoroViewState={changePomodoroViewState} \r\n      SelectedOptionIssue={props.SelectedOptionIssue} \r\n      \r\n      ></StartSession>\r\n             </div>\r\n\r\n    );\r\n  };\r\n  \r\n\r\nexport default CoutdownCompontent;\r\n\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js",["127","128","129"],"import React from 'react';\n  const ProjectIssueSelectorView = (props) => {\n    console.log(props.nextStateName)\n    React.useEffect(() => {\n      if (props.props.SelectedOptionIssue != undefined) {\n        const xx = props.nextStateName\n        props.props.changePomodoroViewState(props.nextStateName)\n      }\n       }, [props.props.SelectedOptionIssue]);\n        return (<div>\n          Select Project/issue to start the pomodoro session!\n        </div>)\n       \n  }\n\n\nexport default ProjectIssueSelectorView;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js",["130"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\n  const PomodoroBreakView = (props) => {\n   \n    const [modalOpen, setModalOpen] = useState(true);\n\n    const startAbreak = () => {\n      setModalOpen(!modalOpen)\n      props.changePomodoroViewState(props.sessionstates.nextStateBreakSession)\n      \n    }\n    const makeStop = () => {\n        setModalOpen(!modalOpen);\n         props.changePomodoroViewState(props.sessionstates.nextStatePomdooroSession)\n      }\n      const toggleModal = () => {\n    \n        setModalOpen(!modalOpen);\n      }\n      const lastSession = () => {\n        setModalOpen(!modalOpen);\n        CacheCleaner(\"all\")\n        props.changePomodoroViewState(props.sessionstates.nextStateLastStationkSession)\n      }\n   return (<div>\n        Time for a break!\n        <Modal\n      isOpen={modalOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog3\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={500}\n    >  \n    <button onClick={startAbreak} >Start a break </button> <button onClick={makeStop} >start new pomodoro</button>\n    <button onClick={lastSession}>Void last session</button>\n   \n    </Modal>\n      </div>)\n  }\n\n\nexport default PomodoroBreakView;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js",["131","132"],"import React, { useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\n  const PomodoroBreakInProgress = (props) => {\n    const stopCurrentSession = (nextStateName) => {\n      props.changePomodoroViewState(props.nextStateName)\n    }\n    const pomodoroTimerKiller = (nextStateName)  => {\n      props.changePomodoroViewState(props.nextStateName);\n      CacheCleaner([\"minutes\", \"seconds\", \"hours\"])\n    }\n   \n     if (props.numberofsessions % props.settings.frequencyLongBreakDefaultplusCached != 0){\n       \n      const propslist = {seconds: 0, hours: 0, minutes: props.settings.breakDurationDefaulttplusCached}\n      \n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current short break</button></div>)\n\n    }\n    else {\n      const propslist = {seconds: 0, hours: 0, minutes: props.settings.longBreakDurationDefaultplusCached}\n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current Long break</button></div>)\n\n    }\n  \n  }\n\n\nexport default PomodoroBreakInProgress;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js",["133","134","135","136","137"],"import React from 'react';\nimport './countdown.css'\nimport StartNewPomodoroView from './countdown_phases/StartNewPomodoroView';\nimport ProjectIssueSelectorView from './countdown_phases/InitialStateSelectProject';\nimport PomodoroBreakInProgress from './countdown_phases/PomodoroBreakInProgress';\nimport PomodoroBreakView from './countdown_phases/PomodoroBreakView';\nimport PomodoroActiveSession from './countdown_phases/PomodoroActiveSession';\nconst StartSession = (props) => {\n\n    switch(props.currentPomodoroState) {\n\n        case 'ProjectIssueSelectorView':\n            const nextStateName = 'StartNewPomodoroView' \n        return (<div>\n            <ProjectIssueSelectorView props={props} nextStateName={nextStateName}></ProjectIssueSelectorView>\n        </div>)\n        \n    case 'StartNewPomodoroView':\n    const nextStateName2='PomodoroActiveSession'\n    return( \n       <StartNewPomodoroView nextStateName={nextStateName2} props={props}></StartNewPomodoroView>\n         )\n  \n    case 'PomodoroActiveSession':\n        const nextStateName3='PomodoroBreakView'\n          return(<PomodoroActiveSession \n            timerdata={props.props}\n            props={props}\n            changePomodoroViewState={props.changePomodoroViewState}\n            settings={props.settings}\n            setnumberofsessions = {props.setnumberofsessions}\n            nextStateName={nextStateName3}\n          ></PomodoroActiveSession>)\n    case 'PomodoroBreakView':\n        const nextStatePomdooroSession='StartNewPomodoroView'\n        const nextStateBreakSession='PomodoroBreakInProgress'\n        const nextStateLastStationkSession='ProjectIssueSelectorView'\n        \n       const propslist = {nextStateLastStationkSession:'ProjectIssueSelectorView', nextStateBreakSession:'PomodoroBreakInProgress', nextStatePomdooroSession:'StartNewPomodoroView'}\n\n    return(\n  <PomodoroBreakView sessionstates={propslist} changePomodoroViewState={props.changePomodoroViewState}></PomodoroBreakView>)    \n    \n  case 'PomodoroBreakInProgress':\n  const nextSession='StartNewPomodoroView'\n        return (<PomodoroBreakInProgress settings={props.settings} \n          numberofsessions = {props.numberofsessions}\n          changePomodoroViewState={props.changePomodoroViewState} \n          nextStateName={nextSession} \n          settings={props.settings}\n          timerdata={props.breakduration} \n          setnumberofsessions = {props.setnumberofsessions}\n          ></PomodoroBreakInProgress>)        \n\n}\n\n    return <div>No state found in case/switch</div>\n   }    \n\n   \n\n   export default StartSession;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/CacheCleaner.js",["138","139"],"import React from 'react';\n\nconst CacheCleaner = (cacheToRemove) => {\n\n    if (cacheToRemove == 'all'){\n\n    localStorage.clear();   \n}\nelse {\n    for (const items of cacheToRemove) {\n    console.log(items)\n    localStorage.removeItem(items)\n}\n}\n\n\n\n}\n\nexport default CacheCleaner",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":15},{"ruleId":"144","severity":1,"message":"148","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":20},{"ruleId":"144","severity":1,"message":"149","line":15,"column":25,"nodeType":"146","messageId":"147","endLine":15,"endColumn":43},{"ruleId":"150","severity":1,"message":"151","line":19,"column":6,"nodeType":"152","endLine":19,"endColumn":24,"suggestions":"153"},{"ruleId":"144","severity":1,"message":"154","line":35,"column":11,"nodeType":"146","messageId":"147","endLine":35,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":49,"column":11,"nodeType":"146","messageId":"147","endLine":49,"endColumn":31},{"ruleId":"150","severity":1,"message":"156","line":55,"column":8,"nodeType":"152","endLine":55,"endColumn":29,"suggestions":"157"},{"ruleId":"144","severity":1,"message":"158","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},{"ruleId":"144","severity":1,"message":"159","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"160","line":2,"column":20,"nodeType":"146","messageId":"147","endLine":2,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":11,"column":31,"nodeType":"163","messageId":"164","endLine":11,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":33,"column":34,"nodeType":"163","messageId":"164","endLine":33,"endColumn":36},{"ruleId":"150","severity":1,"message":"165","line":36,"column":12,"nodeType":"152","endLine":36,"endColumn":35,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"167","line":43,"column":16,"nodeType":"152","endLine":43,"endColumn":27,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"169","line":13,"column":15,"nodeType":"163","messageId":"164","endLine":13,"endColumn":17},{"ruleId":"161","severity":1,"message":"169","line":13,"column":25,"nodeType":"163","messageId":"164","endLine":13,"endColumn":27},{"ruleId":"161","severity":1,"message":"169","line":13,"column":35,"nodeType":"163","messageId":"164","endLine":13,"endColumn":37},{"ruleId":"161","severity":1,"message":"169","line":20,"column":22,"nodeType":"163","messageId":"164","endLine":20,"endColumn":24},{"ruleId":"144","severity":1,"message":"159","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},{"ruleId":"144","severity":1,"message":"160","line":2,"column":27,"nodeType":"146","messageId":"147","endLine":2,"endColumn":36},{"ruleId":"144","severity":1,"message":"170","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":15},{"ruleId":"144","severity":1,"message":"171","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":21},{"ruleId":"144","severity":1,"message":"172","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":28},{"ruleId":"144","severity":1,"message":"173","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":32},{"ruleId":"144","severity":1,"message":"174","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":13},{"ruleId":"144","severity":1,"message":"175","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":25},{"ruleId":"144","severity":1,"message":"176","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":29},{"ruleId":"144","severity":1,"message":"177","line":13,"column":8,"nodeType":"146","messageId":"147","endLine":13,"endColumn":31},{"ruleId":"144","severity":1,"message":"178","line":40,"column":12,"nodeType":"146","messageId":"147","endLine":40,"endColumn":28},{"ruleId":"144","severity":1,"message":"179","line":40,"column":30,"nodeType":"146","messageId":"147","endLine":40,"endColumn":49},{"ruleId":"144","severity":1,"message":"180","line":42,"column":12,"nodeType":"146","messageId":"147","endLine":42,"endColumn":30},{"ruleId":"144","severity":1,"message":"181","line":42,"column":32,"nodeType":"146","messageId":"147","endLine":42,"endColumn":53},{"ruleId":"144","severity":1,"message":"182","line":53,"column":11,"nodeType":"146","messageId":"147","endLine":53,"endColumn":29},{"ruleId":"144","severity":1,"message":"183","line":56,"column":11,"nodeType":"146","messageId":"147","endLine":56,"endColumn":37},{"ruleId":"144","severity":1,"message":"184","line":60,"column":11,"nodeType":"146","messageId":"147","endLine":60,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":5,"column":43,"nodeType":"163","messageId":"164","endLine":5,"endColumn":45},{"ruleId":"144","severity":1,"message":"185","line":6,"column":15,"nodeType":"146","messageId":"147","endLine":6,"endColumn":17},{"ruleId":"150","severity":1,"message":"186","line":9,"column":11,"nodeType":"152","endLine":9,"endColumn":44,"suggestions":"187"},{"ruleId":"144","severity":1,"message":"160","line":2,"column":20,"nodeType":"146","messageId":"147","endLine":2,"endColumn":29},{"ruleId":"144","severity":1,"message":"160","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":13,"column":86,"nodeType":"163","messageId":"164","endLine":13,"endColumn":88},{"ruleId":"188","severity":1,"message":"189","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":55,"endColumn":2},{"ruleId":"144","severity":1,"message":"192","line":35,"column":15,"nodeType":"146","messageId":"147","endLine":35,"endColumn":39},{"ruleId":"144","severity":1,"message":"193","line":36,"column":15,"nodeType":"146","messageId":"147","endLine":36,"endColumn":36},{"ruleId":"144","severity":1,"message":"194","line":37,"column":15,"nodeType":"146","messageId":"147","endLine":37,"endColumn":43},{"ruleId":"195","severity":1,"message":"196","line":50,"column":11,"nodeType":"197","messageId":"198","endLine":50,"endColumn":36},{"ruleId":"144","severity":1,"message":"199","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"169","line":5,"column":23,"nodeType":"163","messageId":"164","endLine":5,"endColumn":25},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'CacheCleaner' is defined but never used.","'setSessionDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTicket'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'response' is assigned a value but never used.","'completedSessionData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SessionDuration'. Either include it or remove the dependency array.",["203"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchIssueHandler'. Either include it or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'fetchSummaryForIssueKey'. Either include it or remove the dependency array.",["205"],"Expected '===' and instead saw '=='.","'Project' is defined but never used.","'SelectedIssue' is defined but never used.","'StartNewPomodoroView' is defined but never used.","'ProjectIssueSelectorView' is defined but never used.","'Modal' is defined but never used.","'PomodoroBreakView' is defined but never used.","'PomodoroActiveSession' is defined but never used.","'PomodoroBreakInProgress' is defined but never used.","'numberofsessions' is assigned a value but never used.","'setnumberofsessions' is assigned a value but never used.","'numberOfLongBreaks' is assigned a value but never used.","'setnumberOfLongBreaks' is assigned a value but never used.","'startPomodoroBreak' is assigned a value but never used.","'setnumberofCompeltedBreaks' is assigned a value but never used.","'incremenetPomodoroSession' is assigned a value but never used.","'xx' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.nextStateName' and 'props.props'. Either include them or remove the dependency array.",["206"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'nextStatePomdooroSession' is assigned a value but never used.","'nextStateBreakSession' is assigned a value but never used.","'nextStateLastStationkSession' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [UpdateTicket, numberofSessions]",{"range":"217","text":"218"},"Update the dependencies array to be: [SelectedOptionIssue, SessionDuration]",{"range":"219","text":"220"},"Update the dependencies array to be: [fetchIssueHandler, props.selectedProject]",{"range":"221","text":"222"},"Update the dependencies array to be: [IssueKeys, fetchSummaryForIssueKey]",{"range":"223","text":"224"},"Update the dependencies array to be: [props.nextStateName, props.props, props.props.SelectedOptionIssue]",{"range":"225","text":"226"},[915,933],"[UpdateTicket, numberofSessions]",[1915,1936],"[SelectedOptionIssue, SessionDuration]",[1078,1101],"[fetchIssueHandler, props.selectedProject]",[1226,1237],"[IssueKeys, fetchSummaryForIssueKey]",[320,353],"[props.nextStateName, props.props, props.props.SelectedOptionIssue]"]