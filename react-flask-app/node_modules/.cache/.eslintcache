[{"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js":"1","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js":"2","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js":"3","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js":"4","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js":"5","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js":"6","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js":"7","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js":"8","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js":"9","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js":"10","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js":"11","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js":"12","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js":"13","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js":"14","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js":"15","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js":"16","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js":"17","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js":"18","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/CacheCleaner.js":"19","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/UpdateIssueTimelog.js":"20"},{"size":500,"mtime":1633806966603,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1633806966603,"results":"23","hashOfConfig":"22"},{"size":240,"mtime":1633806966603,"results":"24","hashOfConfig":"22"},{"size":907,"mtime":1633806966603,"results":"25","hashOfConfig":"22"},{"size":2698,"mtime":1635264978637,"results":"26","hashOfConfig":"22"},{"size":2209,"mtime":1633806966603,"results":"27","hashOfConfig":"22"},{"size":1071,"mtime":1634387583292,"results":"28","hashOfConfig":"22"},{"size":315,"mtime":1633806966603,"results":"29","hashOfConfig":"22"},{"size":2172,"mtime":1635247871807,"results":"30","hashOfConfig":"22"},{"size":1510,"mtime":1634829316159,"results":"31","hashOfConfig":"22"},{"size":313,"mtime":1634214319498,"results":"32","hashOfConfig":"22"},{"size":4051,"mtime":1635351703731,"results":"33","hashOfConfig":"22"},{"size":511,"mtime":1635246877854,"results":"34","hashOfConfig":"22"},{"size":569,"mtime":1635283252312,"results":"35","hashOfConfig":"22"},{"size":1921,"mtime":1635283000927,"results":"36","hashOfConfig":"22"},{"size":1560,"mtime":1635282838431,"results":"37","hashOfConfig":"22"},{"size":2260,"mtime":1635283057456,"results":"38","hashOfConfig":"22"},{"size":2571,"mtime":1635246877854,"results":"39","hashOfConfig":"22"},{"size":279,"mtime":1635166759332,"results":"40","hashOfConfig":"22"},{"size":1044,"mtime":1635352872061,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"12skugr",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js",[],["96","97"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js",["98"],"\nimport './App.css';\n\nimport TopMenu from './components/HeaderMenu/TopMenu';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n  return (\n    <div>\n\n      <MainPanel>\n      </MainPanel>\n    </div>\n  );\n}\n\nexport default App;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js",["99","100","101","102","103","104","105"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './MainPanel.css' \r\nimport CoutdownCompontent from './countdown/countdown_controller/Countdown';\r\nimport TopMenu from './HeaderMenu/TopMenu';\r\nimport Project from './Project/Project';\r\nimport SelectedIssue from './Issue/SelectedIssue'; \r\nimport useSound from 'use-sound';\r\nimport CompletedSessionCounter from './countdown/CompletedSessionsCounter/CompletedSessionCounter';\r\nimport CacheCleaner from '../helperfunctions/CacheCleaner';\r\nconst MainPanel = () => {\r\n\r\nconst [numberofSessions, setNumberOfSessions] = useState(localStorage.getItem('numberofSessions') || 0)\r\nconst [selectedProject, setSelectedProject] = useState(localStorage.getItem('selectedProject'))\r\nconst [SelectedOptionIssue, setSelectedIssue] = useState(localStorage.getItem('SelectedOptionIssue'));\r\nconst [SessionDuration, setSessionDuration] = useState();\r\n\r\nuseEffect(() => {\r\n   UpdateTicket()\r\n  }, [numberofSessions]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"selectedProject\", selectedProject)\r\n    localStorage.setItem('SelectedOptionIssue', SelectedOptionIssue)\r\n    localStorage.setItem('numberofSessions', numberofSessions)\r\n   }, [selectedProject, SelectedOptionIssue, numberofSessions]);\r\n  useEffect(() => {\r\n\r\n   }, [selectedProject]);\r\n\r\n  async function UpdateTicket() {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    const response = await fetch('/updateTicket', {\r\n      method: 'POST',\r\n      body:   JSON.stringify(completedSessionData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  const incrementNumberOfCompletedPomodoro = () => {\r\n    setNumberOfSessions(parseInt(numberofSessions) + 1)\r\n  }\r\n  useEffect(() => {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    \r\n      \r\n    }, [SelectedOptionIssue]);\r\n// \r\n  return (\r\n    <div className='mainpanelcss'>\r\n      <TopMenu></TopMenu>\r\n      <CoutdownCompontent numberofSessions={numberofSessions} setNumberOfSessions={incrementNumberOfCompletedPomodoro} selectedProject={selectedProject} SelectedOptionIssue={SelectedOptionIssue}>\r\n </CoutdownCompontent>\r\n      <Project selectedProject={selectedProject} setSelectedProject={setSelectedProject}></Project>\r\n      <SelectedIssue selectedProject={selectedProject} selectedIssue={SelectedOptionIssue} setSelectedIssue={setSelectedIssue}> </SelectedIssue>\r\n      <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\r\n      \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js",["106"],"\nimport React, { ReactDOM, useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nfunction Settings() {\n  const sessionDurationDefaultplusCached = (localStorage.getItem('sessionDuration') || 25)\n  const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\n  const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\n  const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\n\n\n\n    const [ sessionDuration, setSessionDuration ] = useState(\n      sessionDurationDefaultplusCached\n    );\n    const [ breakDuration, setbreakDuration ] = useState(\n      breakDurationDefaulttplusCached\n    );\n    const [ longBreakDuration, setLongBreakDuration ] = useState(\n      longBreakDurationDefaultplusCached\n    );\n    const [frequencyLongBreak, setfrequencyLongBreak ] = useState(\n      frequencyLongBreakDefaultplusCached\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('sessionDuration', sessionDuration);\n    }, [sessionDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('breakduration', breakDuration);\n    }, [breakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('longBreakDuration',longBreakDuration);\n    }, [longBreakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('frequencyLongBreak', frequencyLongBreak);\n    }, [frequencyLongBreak]);\n  return (\n    <div> \n        Enter Session Duration\n    <RangeSlider\n    value={sessionDuration}\n    onChange={changeEvent => setSessionDuration(changeEvent.target.value)}\n  />\n          Enter Break Duration\n    <RangeSlider\n    value={breakDuration}\n    onChange={changeEvent => setbreakDuration(changeEvent.target.value)}\n  />\n          Enter  Long Break Duration\n    <RangeSlider\n    value={longBreakDuration}\n    onChange={changeEvent => setLongBreakDuration(changeEvent.target.value)}\n  />\n          Frequency long break\n    <RangeSlider\n    value={frequencyLongBreak}\n    onChange={changeEvent => setfrequencyLongBreak(changeEvent.target.value)}\n  />\n  \n\n  </div>\n  );\n}\n\n\nexport default Settings","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js",["107","108"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './completedsessioncounter.css'\r\n  const CompletedSessionCounter = (prop) => {\r\n\r\n    return (\r\n        <div> Current Sessions count : {prop.numberofSessions} </div>\r\n    \r\n      ); \r\n  }\r\n\r\n\r\nexport default CompletedSessionCounter;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js",["109","110","111","112"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState([]);\r\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState({});\r\n\r\n  const  fetchIssueHandler = async () => {\r\n    if (props.selectedProject != undefined) {\r\n    var url = '/getIssueKeys/' + props.selectedProject\r\n    const response = await fetch(url)\r\n    const json = await response.json()\r\n  setIssueKeys(json)\r\n}\r\n      };\r\n\r\n       const  fetchSummaryForIssueKey =  async () => {\r\n      \r\n          var temp_dict = {}\r\n          for (const i of IssueKeys) {\r\n            var url = '/getIssueSummary/' + i\r\n            const response = await fetch(url)\r\n            const json = await response.json()\r\n             temp_dict[i] = json       \r\n          }\r\n          setIssueKeyPlusSummary(temp_dict)\r\n         \r\n      }\r\n     \r\n     useEffect(() => {\r\n      if ( props.selectedProject != \"null\") {\r\n      fetchIssueHandler();\r\n}     // props.setSelectedIssue()\r\n        }, [props.selectedProject]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n     // setIssueKeyPlusSummary({});  \r\n      fetchSummaryForIssueKey();\r\n            }, [IssueKeys]);\r\n    \r\n\r\n    function Options({ options }) {\r\n        return (\r\n          Object.values(options).map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      if (props.SelectedIssue == null) {\r\n        const selectedValue = event.target.value\r\n        var key = Object.keys(IssueKeyPlusSummary).filter(function(key) {return IssueKeyPlusSummary[key] === selectedValue})[0];  \r\n        props.setSelectedIssue(key)\r\n   \r\n      }\r\n   \r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={IssueKeyPlusSummary[props.selectedIssue]}>\r\n            <Options options={IssueKeyPlusSummary} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js",["113","114","115","116"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.props.hours, props.props.minutes, props.props.seconds]);\n    console.log([h, m, s])\n\n    const tick = () => {\n        \n        if ((props.props.paused) || props.props.sessionCompleted) return;\n        if (h == 0 && m == 0 && s == 0) {\n          console.log(\"it is 0.0.0!!\")\n          props.pomodoroTimerKiller();\n        return }\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        localStorage.setItem('hours', h);\n        localStorage.setItem('minutes', m);\n        localStorage.setItem('seconds', s);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n      React.useEffect(() => {\n        \n      }, [props.props.hours, props.props.minutes, props.props.seconds]);\n      \n\n    return (\n      <div>  \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.props.sessionCompleted ? \"Time's up!\" : ''}</div>\n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js",["117","118"],"\nimport React, { useState, useEffect } from 'react';\n\nconst Options = ({props}) => {\n    return (\n        Object.values(props).map(option => \n                    <option>                                   \n                    {option}\n                    </option>)\n                   );\n}\nexport default Options;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js",["134","135","136"],"import React from 'react';\n  const ProjectIssueSelectorView = (props) => {\n    console.log(props.nextStateName)\n    React.useEffect(() => {\n      if (props.props.SelectedOptionIssue != undefined) {\n        const xx = props.nextStateName\n        props.props.changePomodoroViewState(props.nextStateName)\n      }\n       }, [props.props.SelectedOptionIssue]);\n        return (<div>\n          Select Project/issue to start the pomodoro session!\n        </div>)\n       \n  }\n\n\nexport default ProjectIssueSelectorView;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js",["137","138","139"],"import React, { useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport { useState} from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport useSound from 'use-sound';\n\nimport finishedSessionSound from '../../../../sounds/sound.wav'\nimport ReactAudioPlayer from 'react-audio-player';\n  const PomodoroActiveSession = (props) => {\n    const [issoundplayinh, setsoundplaying] = useState(false)\n    const onClickHandler = () => {\n    \n       return (<div></div>)\n  }\n    const pomodoroTimerKiller = (nextStateName)  => {\n      setsoundplaying(!issoundplayinh);\n      props.changePomodoroViewState(props.nextStateName);\n      props.setnumberofsessions();\n      \n      const list = [\"minutes\", \"seconds\", \"hours\"]\n      CacheCleaner(list)\n      \n         }\n \n    \n\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n     \n      setModalOpen(!modalOpen)\n      props.changePomodoroViewState(props.nextStateName);\n  \n    }\n    const makeStop = () => {\n      setModalOpen(!modalOpen);\n    }\n    const toggleModal = () => {\n      console.log(\"trying to close nodal\")\n      setModalOpen(!modalOpen);\n    }\n     return (<div>\n      <PomodoRoTimer props={props.timerdata} pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n    <button onClick={makeStop}>\n        Stop current session\n        </button>\n        <ReactAudioPlayer\n  src={finishedSessionSound}\n  autoPlay={true}\n  controls={false}\n/>\n        <Modal\n      isOpen={modalOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog2\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={500}\n    >  \n    <button onClick={closeModal} >Are you sure? </button> <button onClick={makeStop} >go back to pomodoro</button>\n   \n    </Modal>\n  </div>)\n  }\n\n\nexport default PomodoroActiveSession;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js",["140"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport beginningSessionSound from '../../../../sounds/sound2.wav'\nimport ReactAudioPlayer from 'react-audio-player';\n  const PomodoroBreakView = (props) => {\n   \n    const [modalOpen, setModalOpen] = useState(true);\n\n    const startAbreak = () => {\n      setModalOpen(!modalOpen)\n      props.changePomodoroViewState(props.sessionstates.nextStateBreakSession)\n      \n    }\n    const makeStop = () => {\n        setModalOpen(!modalOpen);\n         props.changePomodoroViewState(props.sessionstates.nextStatePomdooroSession)\n      }\n      const toggleModal = () => {\n    \n        setModalOpen(!modalOpen);\n      }\n      const lastSession = () => {\n        setModalOpen(!modalOpen);\n        CacheCleaner(\"all\")\n        props.changePomodoroViewState(props.sessionstates.nextStateLastStationkSession)\n      }\n   return (<div>\n        Time for a break!\n        <Modal\n      isOpen={modalOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog3\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={500}\n    >  \n    <button onClick={startAbreak} >Start a break </button> <button onClick={makeStop} >start new pomodoro</button>\n    <button onClick={lastSession}>Void last session</button>\n    <ReactAudioPlayer\n  src={beginningSessionSound}\n  autoPlay={true}\n  controls={false}\n/>\n   \n    </Modal>\n      </div>)\n  }\n\n\nexport default PomodoroBreakView;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js",["141","142","143","144","145","146","147","148","149","150"],"import React, { useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\nimport CacheCleaner from '../../../../helperfunctions/CacheCleaner';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport finishedSessionSound from '../../../../sounds/sound.wav'\nimport ReactAudioPlayer from 'react-audio-player';\n  const PomodoroBreakInProgress = (props) => {\n    const stopCurrentSession = (nextStateName) => {\n      props.changePomodoroViewState(props.nextStateName)\n    }\n    const pomodoroTimerKiller = (nextStateName)  => {\n      props.changePomodoroViewState(props.nextStateName);\n      CacheCleaner([\"minutes\", \"seconds\", \"hours\"])\n    }\n   \n     if (props.numberofsessions % props.settings.frequencyLongBreakDefaultplusCached != 0){\n       var propslist = {}\n       if (localStorage.getItem('minutes')) {\n        var propslist = {seconds: localStorage.getItem('seconds'), hours: localStorage.getItem('hours'), minutes: localStorage.getItem('minutes')}\n       }\n       else {\n        var propslist = {seconds: 0, hours: 0, minutes: props.settings.breakDurationDefaulttplusCached\n        }\n      }\n        return (<div>\n          <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n          <button onClick={stopCurrentSession}>\n              Stop current short break</button>\n             </div>)\n              \n      //return (<div>\n        //<PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        //<button onClick={stopCurrentSession}>\n         //   Stop current short break</button></div>)\n\n     }\n\n    else {\n      var propslist = {}\n      if (localStorage.getItem('minutes')) {\n       var propslist = {seconds: localStorage.getItem('seconds'), hours: localStorage.getItem('hours'), minutes: localStorage.getItem('minutes')}\n      }\n      else {\n       var propslist = {seconds: 0, hours: 0, minutes: props.settings.longBreakDurationDefaultplusCached\n       }\n      }\n      return (<div>\n        <PomodoRoTimer props={propslist}  pomodoroTimerKiller={pomodoroTimerKiller} ></PomodoRoTimer>\n        <button onClick={stopCurrentSession}>\n            Stop current Long break</button></div>)\n\n     }\n}\n\n\nexport default PomodoroBreakInProgress;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js",["151","152","153","154","155"],"import React from 'react';\nimport './countdown.css'\nimport StartNewPomodoroView from './countdown_phases/StartNewPomodoroView';\nimport ProjectIssueSelectorView from './countdown_phases/InitialStateSelectProject';\nimport PomodoroBreakInProgress from './countdown_phases/PomodoroBreakInProgress';\nimport PomodoroBreakView from './countdown_phases/PomodoroBreakView';\nimport PomodoroActiveSession from './countdown_phases/PomodoroActiveSession';\nconst StartSession = (props) => {\n\n    switch(props.currentPomodoroState) {\n\n        case 'ProjectIssueSelectorView':\n            const nextStateName = 'StartNewPomodoroView' \n        return (<div>\n            <ProjectIssueSelectorView props={props} nextStateName={nextStateName}></ProjectIssueSelectorView>\n        </div>)\n        \n    case 'StartNewPomodoroView':\n    const nextStateName2='PomodoroActiveSession'\n    return( \n       <StartNewPomodoroView nextStateName={nextStateName2} props={props}></StartNewPomodoroView>\n         )\n  \n    case 'PomodoroActiveSession':\n        const nextStateName3='PomodoroBreakView'\n          return(<PomodoroActiveSession \n            timerdata={props.props}\n            props={props}\n            changePomodoroViewState={props.changePomodoroViewState}\n            settings={props.settings}\n            setnumberofsessions = {props.setnumberofsessions}\n            nextStateName={nextStateName3}\n          ></PomodoroActiveSession>)\n    case 'PomodoroBreakView':\n        const nextStatePomdooroSession='StartNewPomodoroView'\n        const nextStateBreakSession='PomodoroBreakInProgress'\n        const nextStateLastStationkSession='ProjectIssueSelectorView'\n        \n       const propslist = {nextStateLastStationkSession:'ProjectIssueSelectorView', nextStateBreakSession:'PomodoroBreakInProgress', nextStatePomdooroSession:'StartNewPomodoroView'}\n\n    return(\n  <PomodoroBreakView sessionstates={propslist} changePomodoroViewState={props.changePomodoroViewState}></PomodoroBreakView>)    \n    \n  case 'PomodoroBreakInProgress':\n  const nextSession='StartNewPomodoroView'\n        return (<PomodoroBreakInProgress settings={props.settings} \n          numberofsessions = {props.numberofsessions}\n          changePomodoroViewState={props.changePomodoroViewState} \n          nextStateName={nextSession} \n          settings={props.settings}\n          timerdata={props.breakduration} \n          setnumberofsessions = {props.setnumberofsessions}\n          ></PomodoroBreakInProgress>)        \n\n}\n\n    return <div>No state found in case/switch</div>\n   }    \n\n   \n\n   export default StartSession;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/CacheCleaner.js",["156","157"],"import React from 'react';\n\nconst CacheCleaner = (cacheToRemove) => {\n\n    if (cacheToRemove == 'all'){\n\n    localStorage.clear();   \n}\nelse {\n    for (const items of cacheToRemove) {\n    console.log(items)\n    localStorage.removeItem(items)\n}\n}\n\n\n\n}\n\nexport default CacheCleaner","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/helperfunctions/UpdateIssueTimelog.js",["158","159","160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":15},{"ruleId":"165","severity":1,"message":"169","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":16},{"ruleId":"165","severity":1,"message":"170","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":20},{"ruleId":"165","severity":1,"message":"171","line":16,"column":25,"nodeType":"167","messageId":"168","endLine":16,"endColumn":43},{"ruleId":"172","severity":1,"message":"173","line":20,"column":6,"nodeType":"174","endLine":20,"endColumn":24,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"176","line":36,"column":11,"nodeType":"167","messageId":"168","endLine":36,"endColumn":19},{"ruleId":"165","severity":1,"message":"177","line":50,"column":11,"nodeType":"167","messageId":"168","endLine":50,"endColumn":31},{"ruleId":"172","severity":1,"message":"178","line":56,"column":8,"nodeType":"174","endLine":56,"endColumn":29,"suggestions":"179"},{"ruleId":"165","severity":1,"message":"180","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"181","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"182","line":2,"column":20,"nodeType":"167","messageId":"168","endLine":2,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":11,"column":31,"nodeType":"185","messageId":"186","endLine":11,"endColumn":33},{"ruleId":"183","severity":1,"message":"184","line":33,"column":34,"nodeType":"185","messageId":"186","endLine":33,"endColumn":36},{"ruleId":"172","severity":1,"message":"187","line":36,"column":12,"nodeType":"174","endLine":36,"endColumn":35,"suggestions":"188"},{"ruleId":"172","severity":1,"message":"189","line":43,"column":16,"nodeType":"174","endLine":43,"endColumn":27,"suggestions":"190"},{"ruleId":"183","severity":1,"message":"191","line":13,"column":15,"nodeType":"185","messageId":"186","endLine":13,"endColumn":17},{"ruleId":"183","severity":1,"message":"191","line":13,"column":25,"nodeType":"185","messageId":"186","endLine":13,"endColumn":27},{"ruleId":"183","severity":1,"message":"191","line":13,"column":35,"nodeType":"185","messageId":"186","endLine":13,"endColumn":37},{"ruleId":"183","severity":1,"message":"191","line":20,"column":22,"nodeType":"185","messageId":"186","endLine":20,"endColumn":24},{"ruleId":"165","severity":1,"message":"181","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"182","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":36},{"ruleId":"165","severity":1,"message":"192","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":15},{"ruleId":"165","severity":1,"message":"193","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":21},{"ruleId":"165","severity":1,"message":"194","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":28},{"ruleId":"165","severity":1,"message":"195","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":32},{"ruleId":"165","severity":1,"message":"196","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"197","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":25},{"ruleId":"165","severity":1,"message":"198","line":12,"column":8,"nodeType":"167","messageId":"168","endLine":12,"endColumn":29},{"ruleId":"165","severity":1,"message":"199","line":13,"column":8,"nodeType":"167","messageId":"168","endLine":13,"endColumn":31},{"ruleId":"165","severity":1,"message":"200","line":40,"column":12,"nodeType":"167","messageId":"168","endLine":40,"endColumn":28},{"ruleId":"165","severity":1,"message":"201","line":40,"column":30,"nodeType":"167","messageId":"168","endLine":40,"endColumn":49},{"ruleId":"165","severity":1,"message":"202","line":42,"column":12,"nodeType":"167","messageId":"168","endLine":42,"endColumn":30},{"ruleId":"165","severity":1,"message":"203","line":42,"column":32,"nodeType":"167","messageId":"168","endLine":42,"endColumn":53},{"ruleId":"165","severity":1,"message":"204","line":53,"column":11,"nodeType":"167","messageId":"168","endLine":53,"endColumn":29},{"ruleId":"165","severity":1,"message":"205","line":56,"column":11,"nodeType":"167","messageId":"168","endLine":56,"endColumn":37},{"ruleId":"165","severity":1,"message":"206","line":60,"column":11,"nodeType":"167","messageId":"168","endLine":60,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":5,"column":43,"nodeType":"185","messageId":"186","endLine":5,"endColumn":45},{"ruleId":"165","severity":1,"message":"207","line":6,"column":15,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"172","severity":1,"message":"208","line":9,"column":11,"nodeType":"174","endLine":9,"endColumn":44,"suggestions":"209"},{"ruleId":"165","severity":1,"message":"182","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"169","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":16},{"ruleId":"165","severity":1,"message":"210","line":12,"column":11,"nodeType":"167","messageId":"168","endLine":12,"endColumn":25},{"ruleId":"165","severity":1,"message":"182","line":2,"column":20,"nodeType":"167","messageId":"168","endLine":2,"endColumn":29},{"ruleId":"165","severity":1,"message":"182","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"211","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":17},{"ruleId":"165","severity":1,"message":"212","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":28},{"ruleId":"165","severity":1,"message":"213","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":24},{"ruleId":"183","severity":1,"message":"184","line":17,"column":86,"nodeType":"185","messageId":"186","endLine":17,"endColumn":88},{"ruleId":"214","severity":1,"message":"215","line":20,"column":13,"nodeType":"167","messageId":"216","endLine":20,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":23,"column":13,"nodeType":"167","messageId":"216","endLine":23,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":40,"column":11,"nodeType":"167","messageId":"216","endLine":40,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":42,"column":12,"nodeType":"167","messageId":"216","endLine":42,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":45,"column":12,"nodeType":"167","messageId":"216","endLine":45,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":10,"column":5,"nodeType":"219","messageId":"220","endLine":55,"endColumn":2},{"ruleId":"165","severity":1,"message":"221","line":35,"column":15,"nodeType":"167","messageId":"168","endLine":35,"endColumn":39},{"ruleId":"165","severity":1,"message":"222","line":36,"column":15,"nodeType":"167","messageId":"168","endLine":36,"endColumn":36},{"ruleId":"165","severity":1,"message":"223","line":37,"column":15,"nodeType":"167","messageId":"168","endLine":37,"endColumn":43},{"ruleId":"224","severity":1,"message":"225","line":50,"column":11,"nodeType":"226","messageId":"227","endLine":50,"endColumn":36},{"ruleId":"165","severity":1,"message":"228","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"191","line":5,"column":23,"nodeType":"185","messageId":"186","endLine":5,"endColumn":25},{"ruleId":"165","severity":1,"message":"228","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"181","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":27,"column":12,"nodeType":"174","endLine":27,"endColumn":36,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'useSound' is defined but never used.","'CacheCleaner' is defined but never used.","'setSessionDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTicket'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'response' is assigned a value but never used.","'completedSessionData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SessionDuration'. Either include it or remove the dependency array.",["233"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchIssueHandler'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'fetchSummaryForIssueKey'. Either include it or remove the dependency array.",["235"],"Expected '===' and instead saw '=='.","'Project' is defined but never used.","'SelectedIssue' is defined but never used.","'StartNewPomodoroView' is defined but never used.","'ProjectIssueSelectorView' is defined but never used.","'Modal' is defined but never used.","'PomodoroBreakView' is defined but never used.","'PomodoroActiveSession' is defined but never used.","'PomodoroBreakInProgress' is defined but never used.","'numberofsessions' is assigned a value but never used.","'setnumberofsessions' is assigned a value but never used.","'numberOfLongBreaks' is assigned a value but never used.","'setnumberOfLongBreaks' is assigned a value but never used.","'startPomodoroBreak' is assigned a value but never used.","'setnumberofCompeltedBreaks' is assigned a value but never used.","'incremenetPomodoroSession' is assigned a value but never used.","'xx' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.nextStateName' and 'props.props'. Either include them or remove the dependency array.",["236"],"'onClickHandler' is assigned a value but never used.","'cloneDeep' is defined but never used.","'finishedSessionSound' is defined but never used.","'ReactAudioPlayer' is defined but never used.","no-redeclare","'propslist' is already defined.","redeclared","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'nextStatePomdooroSession' is assigned a value but never used.","'nextStateBreakSession' is assigned a value but never used.","'nextStateLastStationkSession' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'React' is defined but never used.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [UpdateTicket, numberofSessions]",{"range":"250","text":"251"},"Update the dependencies array to be: [SelectedOptionIssue, SessionDuration]",{"range":"252","text":"253"},"Update the dependencies array to be: [fetchIssueHandler, props.selectedProject]",{"range":"254","text":"255"},"Update the dependencies array to be: [IssueKeys, fetchSummaryForIssueKey]",{"range":"256","text":"257"},"Update the dependencies array to be: [props.nextStateName, props.props, props.props.SelectedOptionIssue]",{"range":"258","text":"259"},"Update the dependencies array to be: [UpdateTicket, props.numberofSessions]",{"range":"260","text":"261"},[955,973],"[UpdateTicket, numberofSessions]",[1965,1986],"[SelectedOptionIssue, SessionDuration]",[1078,1101],"[fetchIssueHandler, props.selectedProject]",[1226,1237],"[IssueKeys, fetchSummaryForIssueKey]",[320,353],"[props.nextStateName, props.props, props.props.SelectedOptionIssue]",[747,771],"[UpdateTicket, props.numberofSessions]"]