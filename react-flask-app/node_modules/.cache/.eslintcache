[{"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js":"1","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js":"2","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js":"3","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js":"4","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js":"5","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js":"6","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js":"7","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js":"8","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js":"9","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js":"10","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js":"11","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js":"12","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js":"13","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js":"14","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js":"15","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js":"16","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js":"17","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js":"18"},{"size":500,"mtime":1633806966603,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1633806966603,"results":"21","hashOfConfig":"20"},{"size":240,"mtime":1633806966603,"results":"22","hashOfConfig":"20"},{"size":907,"mtime":1633806966603,"results":"23","hashOfConfig":"20"},{"size":2468,"mtime":1634552168219,"results":"24","hashOfConfig":"20"},{"size":2209,"mtime":1633806966603,"results":"25","hashOfConfig":"20"},{"size":1071,"mtime":1634387583292,"results":"26","hashOfConfig":"20"},{"size":315,"mtime":1633806966603,"results":"27","hashOfConfig":"20"},{"size":2103,"mtime":1634387617264,"results":"28","hashOfConfig":"20"},{"size":1556,"mtime":1634755439571,"results":"29","hashOfConfig":"20"},{"size":313,"mtime":1634214319498,"results":"30","hashOfConfig":"20"},{"size":2826,"mtime":1634812912167,"results":"31","hashOfConfig":"20"},{"size":438,"mtime":1634814289568,"results":"32","hashOfConfig":"20"},{"size":233,"mtime":1634647852207,"results":"33","hashOfConfig":"20"},{"size":1165,"mtime":1634752859241,"results":"34","hashOfConfig":"20"},{"size":1397,"mtime":1634752859781,"results":"35","hashOfConfig":"20"},{"size":524,"mtime":1634754815042,"results":"36","hashOfConfig":"20"},{"size":887,"mtime":1634814147072,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12skugr",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js",[],["85","86"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js",["87"],"\nimport './App.css';\n\nimport TopMenu from './components/HeaderMenu/TopMenu';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n  return (\n    <div>\n\n      <MainPanel>\n      </MainPanel>\n    </div>\n  );\n}\n\nexport default App;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js",["88","89","90","91","92"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './MainPanel.css' \r\nimport CoutdownCompontent from './countdown/countdown_controller/Countdown';\r\nimport TopMenu from './HeaderMenu/TopMenu';\r\nimport Project from './Project/Project';\r\nimport SelectedIssue from './Issue/SelectedIssue'; \r\n\r\nimport CompletedSessionCounter from './countdown/CompletedSessionsCounter/CompletedSessionCounter';\r\nconst MainPanel = () => {\r\nconst [numberofSessions, setNumberOfSessions] = useState(0)\r\nconst [selectedProject, setSelectedProject] = useState()\r\nconst [SelectedOptionIssue, setSelectedIssue] = useState();\r\nconst [SessionDuration, setSessioNDuration] = useState(25);\r\n\r\n// props for setting component\r\n// const [ sessionDuration, setSessionDuration ] = useState(25);\r\n//const [ breakDuration, setbreakDuration ] = useState(5);\r\n//const [ longBreakDuration, setLongBreakDuration ] = useState(25);\r\n//const [frequencyLongBreak, setfrequencyLongBreak ] = useState(4);\r\n\r\nuseEffect(() => {\r\n   UpdateTicket()\r\n  }, [numberofSessions]);\r\n\r\n  useEffect(() => {\r\n\r\n   }, [selectedProject]);\r\n\r\n  async function UpdateTicket() {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    const response = await fetch('/updateTicket', {\r\n      method: 'POST',\r\n      body:   JSON.stringify(completedSessionData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    \r\n      \r\n    }, [SelectedOptionIssue]);\r\n// \r\n  return (\r\n    <div className='mainpanelcss'>\r\n      <TopMenu></TopMenu>\r\n      <CoutdownCompontent numberofSessions={numberofSessions} setNumberOfSessions={setNumberOfSessions} selectedProject={selectedProject} SelectedOptionIssue={SelectedOptionIssue}>\r\n </CoutdownCompontent>\r\n      <Project selectedProject={selectedProject} setSelectedProject={setSelectedProject}></Project>\r\n      <SelectedIssue selectedProject={selectedProject} selectedIssue={SelectedOptionIssue} setSelectedIssue={setSelectedIssue}> </SelectedIssue>\r\n      <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\r\n      \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n// <img src='https://i.kym-cdn.com/entries/icons/original/000/028/021/work.jpg' width='400' ></img>\r\n     ","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js",["93"],"\nimport React, { ReactDOM, useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nfunction Settings() {\n  const sessionDurationDefaultplusCached = (localStorage.getItem('sessionDuration') || 25)\n  const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\n  const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\n  const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\n\n\n\n    const [ sessionDuration, setSessionDuration ] = useState(\n      sessionDurationDefaultplusCached\n    );\n    const [ breakDuration, setbreakDuration ] = useState(\n      breakDurationDefaulttplusCached\n    );\n    const [ longBreakDuration, setLongBreakDuration ] = useState(\n      longBreakDurationDefaultplusCached\n    );\n    const [frequencyLongBreak, setfrequencyLongBreak ] = useState(\n      frequencyLongBreakDefaultplusCached\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('sessionDuration', sessionDuration);\n    }, [sessionDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('breakduration', breakDuration);\n    }, [breakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('longBreakDuration',longBreakDuration);\n    }, [longBreakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('frequencyLongBreak', frequencyLongBreak);\n    }, [frequencyLongBreak]);\n  return (\n    <div> \n        Enter Session Duration\n    <RangeSlider\n    value={sessionDuration}\n    onChange={changeEvent => setSessionDuration(changeEvent.target.value)}\n  />\n          Enter Break Duration\n    <RangeSlider\n    value={breakDuration}\n    onChange={changeEvent => setbreakDuration(changeEvent.target.value)}\n  />\n          Enter  Long Break Duration\n    <RangeSlider\n    value={longBreakDuration}\n    onChange={changeEvent => setLongBreakDuration(changeEvent.target.value)}\n  />\n          Frequency long break\n    <RangeSlider\n    value={frequencyLongBreak}\n    onChange={changeEvent => setfrequencyLongBreak(changeEvent.target.value)}\n  />\n  \n\n  </div>\n  );\n}\n\n\nexport default Settings","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js",["94","95"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './completedsessioncounter.css'\r\n  const CompletedSessionCounter = (prop) => {\r\n\r\n    return (\r\n        <div> Current Sessions count : {prop.numberofSessions} </div>\r\n    \r\n      ); \r\n  }\r\n\r\n\r\nexport default CompletedSessionCounter;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js",["96","97","98","99"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState([]);\r\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState({});\r\n\r\n  const  fetchIssueHandler = async () => {\r\n    if (props.selectedProject != undefined) {\r\n    var url = '/getIssueKeys/' + props.selectedProject\r\n    const response = await fetch(url)\r\n    const json = await response.json()\r\n  setIssueKeys(json)\r\n}\r\n      };\r\n\r\n       const  fetchSummaryForIssueKey =  async () => {\r\n      \r\n          var temp_dict = {}\r\n          for (const i of IssueKeys) {\r\n            var url = '/getIssueSummary/' + i\r\n            const response = await fetch(url)\r\n            const json = await response.json()\r\n             temp_dict[i] = json       \r\n          }\r\n          setIssueKeyPlusSummary(temp_dict)\r\n         \r\n      }\r\n     \r\n     useEffect(() => {\r\n      if ( props.selectedProject != undefined) {\r\n      fetchIssueHandler();\r\n}     props.setSelectedIssue()\r\n        }, [props.selectedProject]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      setIssueKeyPlusSummary({});  \r\n      fetchSummaryForIssueKey();\r\n            }, [IssueKeys]);\r\n    \r\n\r\n    function Options({ options }) {\r\n        return (\r\n          Object.values(options).map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      const selectedValue = event.target.value\r\n     var key = Object.keys(IssueKeyPlusSummary).filter(function(key) {return IssueKeyPlusSummary[key] === selectedValue})[0];  \r\n     props.setSelectedIssue(key)\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={IssueKeyPlusSummary[props.selectedIssue]}>\r\n            <Options options={IssueKeyPlusSummary} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js",["100","101","102","103"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.propsdata.hours, props.propsdata.minutes, props.propsdata.seconds]);\n    console.log([h, m, s])\n\n    const tick = () => {\n        \n        if ((props.propsdata.paused) || props.propsdata.sessionCompleted) return;\n        if (h == 0 && m == 0 && s == 0) {\n          console.log(\"it is 0.0.0!!\")\n          props.propsdata.pomodoroTimerKiller();\n        return }\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        localStorage.setItem('hours', h);\n        localStorage.setItem('minutes', m);\n        localStorage.setItem('seconds', s);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n      React.useEffect(() => {\n        \n      }, [props.propsdata.hours, props.propsdata.minutes, props.propsdata.seconds]);\n      \n\n    return (\n      <div>  \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.propsdata.sessionCompleted ? \"Time's up!\" : ''}</div>\n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js",["104","105"],"\nimport React, { useState, useEffect } from 'react';\n\nconst Options = ({props}) => {\n    return (\n        Object.values(props).map(option => \n                    <option>                                   \n                    {option}\n                    </option>)\n                   );\n}\nexport default Options;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js",["127","128"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroActiveSession.js",["129"],"import React from 'react';\nimport Modal from \"react-modal\";\nimport { useState, useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\n\n  const PomodoroActiveSession = (props) => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n      props.timerdata.changePomodoroStatus();\n      setModalOpen(!modalOpen)\n      //localStorage.setItem('ispaused', !paused);\n    }\n    const makeStop = () => {\n      setModalOpen(!modalOpen);\n    }\n    const toggleModal = () => {\n      console.log(\"trying to close nodal\")\n      setModalOpen(!modalOpen);\n    }\n    return (<div>\n      <PomodoRoTimer propsdata={props.timerdata}></PomodoRoTimer>\n    <button onClick={makeStop}>\n        Stop current session\n        </button>\n        <Modal\n      isOpen={modalOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog2\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={500}\n    >  \n    <button onClick={closeModal} >Are you sure? </button> <button onClick={makeStop} >go back to pomodoro</button>\n   \n    </Modal>\n  </div>)\n  }\n\n\nexport default PomodoroActiveSession;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakView.js",["130","131","132"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport PomodoRoTimer from '../../pomodorotimer/pomodoroTimer';\n  const PomodoroBreakView = (props) => {\n    const [modalOpen, setModalOpen] = useState(true);\n    const startAbreak = () => {\n      setModalOpen(!modalOpen)\n      props.breakprop.startPomodoroBreak() \n      \n    }\n    const makeStop = () => {\n        setModalOpen(!modalOpen);\n        props.breakprop.setBreakStatus()\n      }\n      const toggleModal = () => {\n        console.log(\"trying to close nodal\")\n        setModalOpen(!modalOpen);\n      }\n      const lastSession = () => {\n        setModalOpen(!modalOpen);\n        props.breakprop.setBreakStatus();\n        props.breakprop.changePomodoroStatus();\n        console.log(\"lastsession\")\n      }\n\n       \n React.useEffect(() => {\n    console.log(\"hell!o\")\n   }, [ startAbreak]);\n   \n   return (<div>\n        Time for a break!\n        <Modal\n      isOpen={modalOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog3\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={500}\n    >  \n    <button onClick={startAbreak} >Start a break </button> <button onClick={makeStop} >start new pomodoro</button>\n    <button onClick={lastSession}>Void last session</button>\n   \n    </Modal>\n      </div>)\n  }\n\n\nexport default PomodoroBreakView;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/PomodoroBreakInProgress.js",["133","134"],"import React from 'react';\n\nimport { useState, useEffect } from 'react';\nimport PomodoRoTimer from \"../../pomodorotimer/pomodoroTimer\"\n\n  const PomodoroBreakInProgress = (props) => {\n   \n  \n    React.useEffect(() => {\n      console.log(\"changing pomdooro break status\")\n     \n     }, [props.timerdata.breakTimerRunning]);\n  \n      \n\n    \n\n    return (<div>\n    <PomodoRoTimer propsdata={props.timerdata} ></PomodoRoTimer>\n    <button>\n        Stop current break</button></div>)\n  }\n\n\nexport default PomodoroBreakInProgress;\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/StartSession.js",["135","136","137","138","139","140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":15},{"ruleId":"146","severity":1,"message":"150","line":14,"column":25,"nodeType":"148","messageId":"149","endLine":14,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":24,"column":6,"nodeType":"153","endLine":24,"endColumn":24,"suggestions":"154"},{"ruleId":"146","severity":1,"message":"155","line":35,"column":11,"nodeType":"148","messageId":"149","endLine":35,"endColumn":19},{"ruleId":"146","severity":1,"message":"156","line":46,"column":11,"nodeType":"148","messageId":"149","endLine":46,"endColumn":31},{"ruleId":"151","severity":1,"message":"157","line":52,"column":8,"nodeType":"153","endLine":52,"endColumn":29,"suggestions":"158"},{"ruleId":"146","severity":1,"message":"159","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"160","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"161","line":2,"column":20,"nodeType":"148","messageId":"149","endLine":2,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":11,"column":31,"nodeType":"164","messageId":"165","endLine":11,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":33,"column":34,"nodeType":"164","messageId":"165","endLine":33,"endColumn":36},{"ruleId":"151","severity":1,"message":"166","line":36,"column":12,"nodeType":"153","endLine":36,"endColumn":35,"suggestions":"167"},{"ruleId":"151","severity":1,"message":"168","line":43,"column":16,"nodeType":"153","endLine":43,"endColumn":27,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":13,"column":15,"nodeType":"164","messageId":"165","endLine":13,"endColumn":17},{"ruleId":"162","severity":1,"message":"170","line":13,"column":25,"nodeType":"164","messageId":"165","endLine":13,"endColumn":27},{"ruleId":"162","severity":1,"message":"170","line":13,"column":35,"nodeType":"164","messageId":"165","endLine":13,"endColumn":37},{"ruleId":"162","severity":1,"message":"170","line":20,"column":22,"nodeType":"164","messageId":"165","endLine":20,"endColumn":24},{"ruleId":"146","severity":1,"message":"160","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"161","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":36},{"ruleId":"146","severity":1,"message":"161","line":2,"column":20,"nodeType":"148","messageId":"149","endLine":2,"endColumn":29},{"ruleId":"146","severity":1,"message":"171","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":15},{"ruleId":"146","severity":1,"message":"172","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":21},{"ruleId":"146","severity":1,"message":"173","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":28},{"ruleId":"146","severity":1,"message":"174","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":32},{"ruleId":"146","severity":1,"message":"175","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"176","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":25},{"ruleId":"146","severity":1,"message":"177","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":29},{"ruleId":"146","severity":1,"message":"178","line":13,"column":8,"nodeType":"148","messageId":"149","endLine":13,"endColumn":31},{"ruleId":"146","severity":1,"message":"179","line":17,"column":11,"nodeType":"148","messageId":"149","endLine":17,"endColumn":42},{"ruleId":"146","severity":1,"message":"180","line":18,"column":11,"nodeType":"148","messageId":"149","endLine":18,"endColumn":45},{"ruleId":"146","severity":1,"message":"181","line":19,"column":11,"nodeType":"148","messageId":"149","endLine":19,"endColumn":46},{"ruleId":"146","severity":1,"message":"182","line":20,"column":11,"nodeType":"148","messageId":"149","endLine":20,"endColumn":16},{"ruleId":"146","severity":1,"message":"183","line":21,"column":11,"nodeType":"148","messageId":"149","endLine":21,"endColumn":18},{"ruleId":"146","severity":1,"message":"184","line":22,"column":11,"nodeType":"148","messageId":"149","endLine":22,"endColumn":18},{"ruleId":"146","severity":1,"message":"183","line":28,"column":13,"nodeType":"148","messageId":"149","endLine":28,"endColumn":20},{"ruleId":"146","severity":1,"message":"185","line":31,"column":11,"nodeType":"148","messageId":"149","endLine":31,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":32,"column":7,"nodeType":"188","messageId":"189","endLine":35,"endColumn":8},{"ruleId":"146","severity":1,"message":"190","line":45,"column":11,"nodeType":"148","messageId":"149","endLine":45,"endColumn":29},{"ruleId":"146","severity":1,"message":"191","line":49,"column":11,"nodeType":"148","messageId":"149","endLine":49,"endColumn":31},{"ruleId":"146","severity":1,"message":"192","line":58,"column":11,"nodeType":"148","messageId":"149","endLine":58,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":4,"column":43,"nodeType":"164","messageId":"165","endLine":4,"endColumn":45},{"ruleId":"151","severity":1,"message":"193","line":7,"column":11,"nodeType":"153","endLine":7,"endColumn":44,"suggestions":"194"},{"ruleId":"146","severity":1,"message":"161","line":3,"column":20,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":"146","severity":1,"message":"161","line":2,"column":20,"nodeType":"148","messageId":"149","endLine":2,"endColumn":29},{"ruleId":"146","severity":1,"message":"195","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":21},{"ruleId":"151","severity":1,"message":"196","line":7,"column":11,"nodeType":"197","endLine":11,"endColumn":6,"suggestions":"198"},{"ruleId":"146","severity":1,"message":"160","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":18},{"ruleId":"146","severity":1,"message":"161","line":3,"column":20,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":"146","severity":1,"message":"160","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"161","line":2,"column":20,"nodeType":"148","messageId":"149","endLine":2,"endColumn":29},{"ruleId":"146","severity":1,"message":"171","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":15},{"ruleId":"146","severity":1,"message":"172","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":21},{"ruleId":"146","severity":1,"message":"173","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":28},{"ruleId":"146","severity":1,"message":"175","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":13,"column":5,"nodeType":"188","messageId":"189","endLine":25,"endColumn":6},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'setSessioNDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTicket'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'response' is assigned a value but never used.","'completedSessionData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SessionDuration'. Either include it or remove the dependency array.",["202"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'fetchIssueHandler' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["203"],"React Hook useEffect has a missing dependency: 'fetchSummaryForIssueKey'. Either include it or remove the dependency array.",["204"],"Expected '===' and instead saw '=='.","'Project' is defined but never used.","'SelectedIssue' is defined but never used.","'StartNewPomodoroView' is defined but never used.","'ProjectIssueSelectorView' is defined but never used.","'Modal' is defined but never used.","'PomodoroBreakView' is defined but never used.","'PomodoroActiveSession' is defined but never used.","'PomodoroBreakInProgress' is defined but never used.","'breakDurationDefaulttplusCached' is assigned a value but never used.","'longBreakDurationDefaultplusCached' is assigned a value but never used.","'frequencyLongBreakDefaultplusCached' is assigned a value but never used.","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","'seconds' is assigned a value but never used.","'cacheBooleanToString' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'startPomodoroBreak' is assigned a value but never used.","'changePomodoroStatus' is assigned a value but never used.","'setBreakStatus' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.props'. Either include it or remove the dependency array.",["205"],"'PomodoRoTimer' is defined but never used.","The 'startAbreak' function makes the dependencies of useEffect Hook (at line 30) change on every render. To fix this, wrap the definition of 'startAbreak' in its own useCallback() Hook.","VariableDeclarator",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [UpdateTicket, numberofSessions]",{"range":"219","text":"220"},"Update the dependencies array to be: [SelectedOptionIssue, SessionDuration]",{"range":"221","text":"222"},"Update the dependencies array to be: [fetchIssueHandler, props, props.selectedProject]",{"range":"223","text":"224"},"Update the dependencies array to be: [IssueKeys, fetchSummaryForIssueKey]",{"range":"225","text":"226"},"Update the dependencies array to be: [props.props, props.props.SelectedOptionIssue]",{"range":"227","text":"228"},"Wrap the definition of 'startAbreak' in its own useCallback() Hook.",{"range":"229","text":"230"},[1033,1051],"[UpdateTicket, numberofSessions]",[1644,1665],"[SelectedOptionIssue, SessionDuration]",[1078,1101],"[fetchIssueHandler, props, props.selectedProject]",[1224,1235],"[IssueKeys, fetchSummaryForIssueKey]",[247,280],"[props.props, props.props.SelectedOptionIssue]",[287,382],"useCallback(() => {\n      setModalOpen(!modalOpen)\n      props.breakprop.startPomodoroBreak() \n      \n    })"]