[{"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js":"1","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js":"2","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js":"3","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js":"4","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js":"5","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js":"6","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js":"7","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js":"8","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js":"9","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js":"10","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js":"11","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js":"12","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js":"13","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js":"14"},{"size":500,"mtime":1633806966603,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1633806966603,"results":"17","hashOfConfig":"16"},{"size":240,"mtime":1633806966603,"results":"18","hashOfConfig":"16"},{"size":907,"mtime":1633806966603,"results":"19","hashOfConfig":"16"},{"size":2468,"mtime":1634552168219,"results":"20","hashOfConfig":"16"},{"size":2209,"mtime":1633806966603,"results":"21","hashOfConfig":"16"},{"size":1071,"mtime":1634387583292,"results":"22","hashOfConfig":"16"},{"size":315,"mtime":1633806966603,"results":"23","hashOfConfig":"16"},{"size":2103,"mtime":1634387617264,"results":"24","hashOfConfig":"16"},{"size":1508,"mtime":1634580422562,"results":"25","hashOfConfig":"16"},{"size":313,"mtime":1634214319498,"results":"26","hashOfConfig":"16"},{"size":4776,"mtime":1634647762222,"results":"27","hashOfConfig":"16"},{"size":229,"mtime":1634638510723,"results":"28","hashOfConfig":"16"},{"size":394,"mtime":1634647746434,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12skugr",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/index.js",[],["66","67"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/reportWebVitals.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/App.js",["68"],"\nimport './App.css';\n\nimport TopMenu from './components/HeaderMenu/TopMenu';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n  return (\n    <div>\n\n      <MainPanel>\n      </MainPanel>\n    </div>\n  );\n}\n\nexport default App;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/TopMenu.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/MainPanel.js",["69","70","71","72","73"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './MainPanel.css' \r\nimport CoutdownCompontent from './countdown/countdown_controller/Countdown';\r\nimport TopMenu from './HeaderMenu/TopMenu';\r\nimport Project from './Project/Project';\r\nimport SelectedIssue from './Issue/SelectedIssue'; \r\n\r\nimport CompletedSessionCounter from './countdown/CompletedSessionsCounter/CompletedSessionCounter';\r\nconst MainPanel = () => {\r\nconst [numberofSessions, setNumberOfSessions] = useState(0)\r\nconst [selectedProject, setSelectedProject] = useState()\r\nconst [SelectedOptionIssue, setSelectedIssue] = useState();\r\nconst [SessionDuration, setSessioNDuration] = useState(25);\r\n\r\n// props for setting component\r\n// const [ sessionDuration, setSessionDuration ] = useState(25);\r\n//const [ breakDuration, setbreakDuration ] = useState(5);\r\n//const [ longBreakDuration, setLongBreakDuration ] = useState(25);\r\n//const [frequencyLongBreak, setfrequencyLongBreak ] = useState(4);\r\n\r\nuseEffect(() => {\r\n   UpdateTicket()\r\n  }, [numberofSessions]);\r\n\r\n  useEffect(() => {\r\n\r\n   }, [selectedProject]);\r\n\r\n  async function UpdateTicket() {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    const response = await fetch('/updateTicket', {\r\n      method: 'POST',\r\n      body:   JSON.stringify(completedSessionData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const completedSessionData = {\r\n      \"issuekey\": SelectedOptionIssue, \r\n      \"minutes\": SessionDuration\r\n      }\r\n    \r\n      \r\n    }, [SelectedOptionIssue]);\r\n// \r\n  return (\r\n    <div className='mainpanelcss'>\r\n      <TopMenu></TopMenu>\r\n      <CoutdownCompontent numberofSessions={numberofSessions} setNumberOfSessions={setNumberOfSessions} selectedProject={selectedProject} SelectedOptionIssue={SelectedOptionIssue}>\r\n </CoutdownCompontent>\r\n      <Project selectedProject={selectedProject} setSelectedProject={setSelectedProject}></Project>\r\n      <SelectedIssue selectedProject={selectedProject} selectedIssue={SelectedOptionIssue} setSelectedIssue={setSelectedIssue}> </SelectedIssue>\r\n      <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\r\n      \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n// <img src='https://i.kym-cdn.com/entries/icons/original/000/028/021/work.jpg' width='400' ></img>\r\n     ","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/HeaderMenu/Settings/Settings.js",["74"],"\nimport React, { ReactDOM, useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nfunction Settings() {\n  const sessionDurationDefaultplusCached = (localStorage.getItem('sessionDuration') || 25)\n  const breakDurationDefaulttplusCached = (localStorage.getItem('breakduration') || 5)\n  const longBreakDurationDefaultplusCached = (localStorage.getItem('longBreakDuration') || 20)\n  const frequencyLongBreakDefaultplusCached = (localStorage.getItem('frequencyLongBreak') || 4)\n\n\n\n    const [ sessionDuration, setSessionDuration ] = useState(\n      sessionDurationDefaultplusCached\n    );\n    const [ breakDuration, setbreakDuration ] = useState(\n      breakDurationDefaulttplusCached\n    );\n    const [ longBreakDuration, setLongBreakDuration ] = useState(\n      longBreakDurationDefaultplusCached\n    );\n    const [frequencyLongBreak, setfrequencyLongBreak ] = useState(\n      frequencyLongBreakDefaultplusCached\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('sessionDuration', sessionDuration);\n    }, [sessionDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('breakduration', breakDuration);\n    }, [breakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('longBreakDuration',longBreakDuration);\n    }, [longBreakDuration]);\n    React.useEffect(() => {\n      localStorage.setItem('frequencyLongBreak', frequencyLongBreak);\n    }, [frequencyLongBreak]);\n  return (\n    <div> \n        Enter Session Duration\n    <RangeSlider\n    value={sessionDuration}\n    onChange={changeEvent => setSessionDuration(changeEvent.target.value)}\n  />\n          Enter Break Duration\n    <RangeSlider\n    value={breakDuration}\n    onChange={changeEvent => setbreakDuration(changeEvent.target.value)}\n  />\n          Enter  Long Break Duration\n    <RangeSlider\n    value={longBreakDuration}\n    onChange={changeEvent => setLongBreakDuration(changeEvent.target.value)}\n  />\n          Frequency long break\n    <RangeSlider\n    value={frequencyLongBreak}\n    onChange={changeEvent => setfrequencyLongBreak(changeEvent.target.value)}\n  />\n  \n\n  </div>\n  );\n}\n\n\nexport default Settings","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/Project.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/CompletedSessionsCounter/CompletedSessionCounter.js",["75","76"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './completedsessioncounter.css'\r\n  const CompletedSessionCounter = (prop) => {\r\n\r\n    return (\r\n        <div> Current Sessions count : {prop.numberofSessions} </div>\r\n    \r\n      ); \r\n  }\r\n\r\n\r\nexport default CompletedSessionCounter;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Issue/SelectedIssue.js",["77","78","79","80"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './selectedissue.css'\r\n\r\nconst SelectedIssue = (props) => {\r\n\r\n  const [IssueKeys, setIssueKeys] = useState([]);\r\n  const [IssueKeyPlusSummary, setIssueKeyPlusSummary] = useState({});\r\n\r\n  const  fetchIssueHandler = async () => {\r\n    if (props.selectedProject != undefined) {\r\n    var url = '/getIssueKeys/' + props.selectedProject\r\n    const response = await fetch(url)\r\n    const json = await response.json()\r\n  setIssueKeys(json)\r\n}\r\n      };\r\n\r\n       const  fetchSummaryForIssueKey =  async () => {\r\n      \r\n          var temp_dict = {}\r\n          for (const i of IssueKeys) {\r\n            var url = '/getIssueSummary/' + i\r\n            const response = await fetch(url)\r\n            const json = await response.json()\r\n             temp_dict[i] = json       \r\n          }\r\n          setIssueKeyPlusSummary(temp_dict)\r\n         \r\n      }\r\n     \r\n     useEffect(() => {\r\n      if ( props.selectedProject != undefined) {\r\n      fetchIssueHandler();\r\n}     props.setSelectedIssue()\r\n        }, [props.selectedProject]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n      setIssueKeyPlusSummary({});  \r\n      fetchSummaryForIssueKey();\r\n            }, [IssueKeys]);\r\n    \r\n\r\n    function Options({ options }) {\r\n        return (\r\n          Object.values(options).map(option => \r\n                        <option>                                   \r\n                        {option}\r\n                        </option>)\r\n                       );\r\n    }\r\n    \r\n    function handleChange(event){\r\n      const selectedValue = event.target.value\r\n     var key = Object.keys(IssueKeyPlusSummary).filter(function(key) {return IssueKeyPlusSummary[key] === selectedValue})[0];  \r\n     props.setSelectedIssue(key)\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className='selectedissue'>\r\n      Issue:\r\n      <select  onChange={handleChange} name=\"selectIssueList\" id=\"selectIssueList\" value={IssueKeyPlusSummary[props.selectedIssue]}>\r\n            <Options options={IssueKeyPlusSummary} /></select></div>\r\n  );\r\n  }\r\n\r\nexport default SelectedIssue;\r\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/pomodorotimer/pomodoroTimer.js",["81"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst PomodoRoTimer = (props) => {\n   \n    const [[h, m, s], setTime] = useState([props.propsdata.hours, props.propsdata.minutes, props.propsdata.seconds]);\n    console.log([h, m, s])\n\n    const tick = () => {\n        \n        if ((props.propsdata.paused) || props.propsdata.sessionCompleted) return;\n        if (h === 0 && m === 0 && s === 0) {\n          props.propsdata.setsSessionCompleted(true)}\n        else if (m === 0 && s === 0) {\n          setTime([h - 1, 59, 59]);\n  \n        } else if (s == 0) {\n          setTime([h, m - 1, 59]);\n        } else {\n          setTime([h, m, s - 1]);\n        }\n      };\n    \n  \n    \n      useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        localStorage.setItem('hours', h);\n        localStorage.setItem('minutes', m);\n        localStorage.setItem('seconds', s);\n        return () => clearInterval(timerID);\n  \n  \n      });\n   \n      React.useEffect(() => {\n        \n      }, [props.propsdata.hours, props.propsdata.minutes, props.propsdata.seconds]);\n      \n\n    return (\n      <div>  \n        <p>{`${h.toString().padStart(2, '0')}:${m\n          .toString()\n          .padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        <div>{props.propsdata.sessionCompleted ? \"Time's up!\" : ''}</div>\n      </div>\n      \n\n    );\n  };\n   // <CompletedSessionCounter numberofSessions={numberofSessions}></CompletedSessionCounter>\n\n\nexport default PomodoRoTimer;\n\n","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/Project/project_options/Project_options.js",["82","83"],"\nimport React, { useState, useEffect } from 'react';\n\nconst Options = ({props}) => {\n    return (\n        Object.values(props).map(option => \n                    <option>                                   \n                    {option}\n                    </option>)\n                   );\n}\nexport default Options;","/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/Countdown.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/InitialStateSelectProject.js",[],"/home/gk/Documents/pomodoro_for_jira/pomodoro_for_jira/react-flask-app/src/components/countdown/countdown_controller/countdown_phases/StartNewPomodoroView.js",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":15},{"ruleId":"108","severity":1,"message":"112","line":14,"column":25,"nodeType":"110","messageId":"111","endLine":14,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":24,"column":6,"nodeType":"115","endLine":24,"endColumn":24,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"117","line":35,"column":11,"nodeType":"110","messageId":"111","endLine":35,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":46,"column":11,"nodeType":"110","messageId":"111","endLine":46,"endColumn":31},{"ruleId":"113","severity":1,"message":"119","line":52,"column":8,"nodeType":"115","endLine":52,"endColumn":29,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":25},{"ruleId":"108","severity":1,"message":"122","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":18},{"ruleId":"108","severity":1,"message":"123","line":2,"column":20,"nodeType":"110","messageId":"111","endLine":2,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":11,"column":31,"nodeType":"126","messageId":"127","endLine":11,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":33,"column":34,"nodeType":"126","messageId":"127","endLine":33,"endColumn":36},{"ruleId":"113","severity":1,"message":"128","line":36,"column":12,"nodeType":"115","endLine":36,"endColumn":35,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":43,"column":16,"nodeType":"115","endLine":43,"endColumn":27,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":18,"column":22,"nodeType":"126","messageId":"127","endLine":18,"endColumn":24},{"ruleId":"108","severity":1,"message":"122","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":25},{"ruleId":"108","severity":1,"message":"123","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":36},{"ruleId":"108","severity":1,"message":"123","line":2,"column":20,"nodeType":"110","messageId":"111","endLine":2,"endColumn":29},{"ruleId":"108","severity":1,"message":"133","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":15},{"ruleId":"108","severity":1,"message":"134","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":21},{"ruleId":"108","severity":1,"message":"135","line":13,"column":11,"nodeType":"110","messageId":"111","endLine":13,"endColumn":42},{"ruleId":"108","severity":1,"message":"136","line":14,"column":11,"nodeType":"110","messageId":"111","endLine":14,"endColumn":45},{"ruleId":"108","severity":1,"message":"137","line":15,"column":11,"nodeType":"110","messageId":"111","endLine":15,"endColumn":46},{"ruleId":"108","severity":1,"message":"138","line":22,"column":13,"nodeType":"110","messageId":"111","endLine":22,"endColumn":20},{"ruleId":"108","severity":1,"message":"139","line":25,"column":11,"nodeType":"110","messageId":"111","endLine":25,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":26,"column":7,"nodeType":"142","messageId":"143","endLine":29,"endColumn":8},{"ruleId":"108","severity":1,"message":"144","line":34,"column":30,"nodeType":"110","messageId":"111","endLine":34,"endColumn":50},{"ruleId":"108","severity":1,"message":"145","line":51,"column":11,"nodeType":"110","messageId":"111","endLine":51,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":88,"column":34,"nodeType":"126","messageId":"127","endLine":88,"endColumn":36},{"ruleId":"124","severity":1,"message":"132","line":88,"column":59,"nodeType":"126","messageId":"127","endLine":88,"endColumn":61},{"ruleId":"124","severity":1,"message":"132","line":88,"column":98,"nodeType":"126","messageId":"127","endLine":88,"endColumn":100},{"ruleId":"124","severity":1,"message":"125","line":96,"column":34,"nodeType":"126","messageId":"127","endLine":96,"endColumn":36},{"ruleId":"124","severity":1,"message":"132","line":96,"column":68,"nodeType":"126","messageId":"127","endLine":96,"endColumn":70},{"ruleId":"124","severity":1,"message":"125","line":117,"column":34,"nodeType":"126","messageId":"127","endLine":117,"endColumn":36},{"ruleId":"124","severity":1,"message":"132","line":123,"column":24,"nodeType":"126","messageId":"127","endLine":123,"endColumn":26},{"ruleId":"108","severity":1,"message":"146","line":131,"column":8,"nodeType":"110","messageId":"111","endLine":131,"endColumn":21},{"ruleId":"108","severity":1,"message":"147","line":3,"column":11,"nodeType":"110","messageId":"111","endLine":3,"endColumn":31},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'setSessioNDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTicket'. Either include it or remove the dependency array.","ArrayExpression",["150"],"'response' is assigned a value but never used.","'completedSessionData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SessionDuration'. Either include it or remove the dependency array.",["151"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'fetchIssueHandler' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["152"],"React Hook useEffect has a missing dependency: 'fetchSummaryForIssueKey'. Either include it or remove the dependency array.",["153"],"Expected '===' and instead saw '=='.","'Project' is defined but never used.","'SelectedIssue' is defined but never used.","'breakDurationDefaulttplusCached' is assigned a value but never used.","'longBreakDurationDefaultplusCached' is assigned a value but never used.","'frequencyLongBreakDefaultplusCached' is assigned a value but never used.","'minutes' is assigned a value but never used.","'cacheBooleanToString' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setsSessionCompleted' is assigned a value but never used.","'makeStartSession' is assigned a value but never used.","'SessionStatus' is assigned a value but never used.","'changePomodoroStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [UpdateTicket, numberofSessions]",{"range":"162","text":"163"},"Update the dependencies array to be: [SelectedOptionIssue, SessionDuration]",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchIssueHandler, props, props.selectedProject]",{"range":"166","text":"167"},"Update the dependencies array to be: [IssueKeys, fetchSummaryForIssueKey]",{"range":"168","text":"169"},[1033,1051],"[UpdateTicket, numberofSessions]",[1644,1665],"[SelectedOptionIssue, SessionDuration]",[1078,1101],"[fetchIssueHandler, props, props.selectedProject]",[1224,1235],"[IssueKeys, fetchSummaryForIssueKey]"]